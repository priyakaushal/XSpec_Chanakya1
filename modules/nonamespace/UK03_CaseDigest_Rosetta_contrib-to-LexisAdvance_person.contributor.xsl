<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:dig="http://www.lexis-nexis.com/glp/dig"
  xmlns:pubinfo="http://www.lexisnexis.com/xmlschemas/content/shared/publication-info/1/" xmlns:casedigest="http://www.lexisnexis.com/xmlschemas/content/legal/case-digest/1/"
  xmlns:entity="http://www.lexisnexis.com/xmlschemas/content/shared/identified-entities/1/" xmlns:person="http://www.lexisnexis.com/xmlschemas/content/shared/person/1/" xmlns="http://www.lexisnexis.com/xmlschemas/content/shared/base/1/" version="2.0"
  exclude-result-prefixes="dita person entity casedigest dig">

  <dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="Rosetta_contrib-to-LexisAdvance_person.contributor">
    <title>contrib-to-person:contributor <lnpid>id-UK03-27439</lnpid></title>
    <body>
      <p>
        <ul>
          <li>
            <sourcexml>dig:body/dig:info/contrib/person</sourcexml> becomes <targetxml>casedigest:body/note/byline/person:contributor/person:person/person:name.text</targetxml>. The source attribute <sourcexml>contrib/@contribtype</sourcexml> becomes
              <targetxml>person:contributor/@contributor-type</targetxml>. If <sourcexml>@contribtype</sourcexml> is not present in the source data then conversion need to create <targetxml>@contributor-type="undetermined"</targetxml> in
              <targetxml>person:contributor</targetxml>
            <note>Please note that there may be another scenario : <sourcexml>dig:body/bodytext/contrib/person</sourcexml> maps to <targetxml>casedigest:body/note/byline/person:contributor/person:person/person:name.text</targetxml>.</note>
            <pre>
&lt;DIGESTDOC&gt;
  &lt;dig:body&gt;
    &lt;dig:info&gt;
     &lt;contrib contribtype="reporter"&gt;
      &lt;person&gt;
        &lt;name.text&gt;R. M.&lt;/name.text&gt;
      &lt;/person&gt;
     &lt;/contrib&gt;
    &lt;/dig:info&gt;
  &lt;/dig:body&gt;
&lt;/DIGESTDOC&gt;

<b>Becomes</b>
&lt;casedigest:casedigest&gt;
  &lt;casedigest:body&gt;
    &lt;note&gt;
      &lt;byline&gt;
        &lt;person:contributor contributor-type="reporter"&gt;
          &lt;person:person&gt;
            &lt;person:name.text&gt;R. M.&lt;/person:name.text&gt;
          &lt;/person:person&gt;
        &lt;/person:contributor&gt;
      &lt;/byline&gt;
    &lt;/note&gt;
  &lt;/casedigest:body&gt;  
&lt;/casedigest:casedigest&gt;
</pre>
          </li>
          <li>
            <sourcexml>dig:body/bodytext/contrib/org</sourcexml> becomes <targetxml>casedigest:body/note/byline/person:contributor/person:person/person:employer/entity:org</targetxml>.
            <pre>
&lt;DIGESTDOC&gt;
  &lt;dig:body&gt;
    &lt;bodytext&gt;
      &lt;contrib&gt;
        &lt;org display-name="Contributor's Firm"&gt;Messrs Stephensons, Solicitors&lt;/org&gt;
      &lt;/contrib&gt;
    &lt;/bodytext&gt;
  &lt;/dig:body&gt;
&lt;/DIGESTDOC&gt;

<b>Becomes</b>
&lt;casedigest:casedigest&gt;
  &lt;casedigest:body&gt;
    &lt;note&gt;
      &lt;byline&gt;
        &lt;person:contributor&gt;
          &lt;person:person&gt;
            &lt;person:employer&gt;
              &lt;entity:org&gt;Messrs Stephensons, Solicitors&lt;/entity:org&gt;
            &lt;/person:employer&gt;
          &lt;/person:person&gt;
        &lt;/person:contributor&gt;
      &lt;/byline&gt;
    &lt;/note&gt;
  &lt;/casedigest:body&gt;  
&lt;/casedigest:casedigest&gt;
</pre>
          </li>
        </ul>
      </p>
      <section>
        <title>Changes</title>
        <p>2013-02-26: <ph id="change_20130226_RMS">Updated instruction to handle scenario in which attribute<sourcexml>@contribtype</sourcexml> is not present in the source</ph>
        </p>
      </section>
    </body>
  </dita:topic>

  <!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
  <!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-UK\UK03_CaseDigest\Rosetta_contrib-to-LexisAdvance_person.contributor.dita  -->

  <!-- Vikas Rohilla : Template to match the contrib/person -->

  <xsl:template match="contrib">
    <xsl:element name="note">
      <xsl:element name="byline">
        <xsl:apply-templates select="node()"/>
      </xsl:element>
    </xsl:element>
  </xsl:template>

  <xsl:template match="contrib/person">
    <person:contributor>
      <xsl:attribute name="contributor-type">
        <xsl:value-of select="parent::contrib/@contribtype"/>
      </xsl:attribute>
      <person:person>
        <xsl:apply-templates select="@* | node()"/>
        <xsl:if test="./parent::contrib/org">
        <person:employer>
          <entity:org>
            <xsl:apply-templates select="./parent::contrib/org/node()"/>
          </entity:org>
        </person:employer>
        </xsl:if>
      </person:person>
    </person:contributor>
  </xsl:template>

  <xsl:template match="contrib/@contribtype">
    <xsl:attribute name="contributor-type">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>

  <xsl:template match="contrib[parent::dig:review]">
    <xsl:apply-templates select="@* | node()"/>
  </xsl:template>

<!-- if org has sibling person dummy it here because org was handled in person -->
  <xsl:template match="contrib/org[following-sibling::person or preceding-sibling::person]"/>

  <xsl:template match="contrib/org[not(following-sibling::person or preceding-sibling::person)]">
    <person:contributor contributor-type="undetermined">
      <person:person>
        <person:employer>
          <entity:org>
            <xsl:apply-templates select="@* | node()"/>
          </entity:org>
        </person:employer>
      </person:person>
    </person:contributor>
  </xsl:template>

  <xsl:template match="contrib[@contribtype = 'issuing-department']/org" priority="10">
    <xsl:apply-templates select="@* | node()"/>
  </xsl:template>

  <xsl:template match="disclaimer">
    <disclaimer>
      <bodytext>
        <p>
          <text>
            <xsl:apply-templates select="@* | node() except copyright"/>
          </text>
        </p>
      </bodytext>
    </disclaimer>
    <xsl:apply-templates select="copyright"/>
  </xsl:template>

  <xsl:template match="copyright">
    <xsl:choose>
      <xsl:when test="parent::emph">
        <emph>
          <xsl:copy-of select="parent::emph/@*"/>
          <xsl:apply-templates select="node()"/>
        </emph>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="node()"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- Vikas Rohilla : Template match source and creates Target -->
  <xsl:template match="dig:info/contrib[@contribtype = 'issuing-department']" mode="issue-dept">
    <xsl:element name="pubinfo:publisher">
      <xsl:apply-templates select="node()"/>
    </xsl:element>
  </xsl:template>

  <!--Vikas Rohilla : suppresed in the current mode -->
  <xsl:template match="dig:info/contrib[@contribtype = 'issuing-department']"/>



</xsl:stylesheet>
