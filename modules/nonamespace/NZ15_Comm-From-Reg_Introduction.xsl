<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
	xmlns:comm="http://www.lexis-nexis.com/glp/comm"
	xmlns:doc="http://www.lexisnexis.com/xmlschemas/content/shared/document-level-metadata/1/"
	xmlns:lnci="http://www.lexisnexis.com/xmlschemas/content/shared/citations/1/"
	xmlns:ref="http://www.lexisnexis.com/xmlschemas/content/shared/reference/1/"
	xmlns:regulation="urn:x-lexisnexis:content:regulation:sharedservices:1" version="2.0"
	exclude-result-prefixes="dita">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/"
		id="Comm-From-Reg_Introduction">
		<title>Introduction <lnpid>id-NZ15-25409</lnpid></title>
		<body>
			<section>
				<title>This Conversion Instruction describes the conversion of Regulation 8.3 PROD
					schema in the document.</title>
				<p><sourcexml>COMMENTARYDOC</sourcexml> becomes
						<targetxml>regulation:regulation</targetxml>, which is a root element for
					Regulation. And attributes are populated as follows: <ul>
						<li><sourcexml>COMMENTARYDOC[@id]</sourcexml> becomes
								<targetxml>regulation:regulation[@xml:id]</targetxml> provide a
							unique identifier for this element. The presence or absence of the
							xml:id will not affect delivery product behavior; the default value is
							IMPLIED.</li>
						<li>Create <targetxml>regulation:regulation[@xml:lang]</targetxml> which is
							used to specify the language that is being used in the content/document.
							The presence or absence of attribute value will not affect delivery
							product behavior and default value is 'none'.</li>
						<li>
							<pre>

&lt;COMMENTARYDOC&gt;
   ...
 &lt;docinfo:doc-lang lang="en"/&gt;
 &lt;docinfo:doc-country iso-cc="NZ"/&gt;
   ...
&lt;/COMMENTARYDOC&gt;
<b>Becomes</b>

&lt;regulation:regulation xml:lang="en-NZ"&gt;
   ...
&lt;/regulation:regulation&gt;
</pre>
						</li>
					</ul>
				</p>

				<note><sourcexml>@searchtype</sourcexml> attribute will be dropped from conversion
					in NewLexis except for JCITE markup.</note>

				<note>NewLexis schema does not allow white space and colon (:) in attribute values
					that provide a unique identifier for that element. If white space or colon is
					encountered in attribute values then replace it with an underscore sign(_), and
					the attribute value should be unique within a document.</note>

				<note><b>Handling of element <sourcexml>refpt</sourcexml>:</b> As
						<sourcexml>refpt</sourcexml> has to be converted to
						<targetxml>ref:anchor</targetxml> and <targetxml>xml:id</targetxml> can stay
					as long as it does not duplicate. If it duplicates with
						<targetxml>ref:anchor/@id</targetxml>, remove the
						<targetxml>@xml:id</targetxml> and retain <targetxml>ref:anchor</targetxml>
					with all its conversion in output.</note>
			</section>

			<section>
				<title>Top Level Elements</title>
				<p><targetxml>regulation:head</targetxml>, <targetxml>regulation:body</targetxml>,
					and <targetxml>doc:metadata</targetxml> are created as required children of
						<targetxml>regulation:regulation</targetxml></p>
			</section>

			<section>
				<title>Notes</title>
				<p>The following information is meant to help the user understand the conventions
					used in this document.</p>
				<p>Source elements and attributes are highlighted like this: <sourcexml>XML
						SOURCE</sourcexml></p>
				<p>Target elements and attributes are highlighted like this: <targetxml>XML
						TARGET</targetxml></p>
				<p>Verify content of following target attributes: <ul>
						<li><sourcexml>@month</sourcexml> becomes <targetxml>@month</targetxml> is
							between 01-12. Any numbers outside this range, do not output a
								<targetxml>@month</targetxml>.</li>
						<li><sourcexml>@day</sourcexml> becomes <targetxml>@day</targetxml> is
							between 01-31. Any numbers outside this range, do not output
								<targetxml>@day</targetxml>.</li>
						<li><sourcexml>@year</sourcexml> becomes <targetxml>@year</targetxml> is 4
							digits in length. Any other lengths, do not output
								<targetxml>@year</targetxml>.</li>
					</ul>
				</p>
			</section>
		</body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-PAC\NZ15_Commentary_From_Regs\Comm-From-Reg_Introduction.dita  -->
	<!-- <xsl:message>NZ15_Comm-From-Reg_Introduction.xsl requires manual development!</xsl:message> -->

	<xsl:template match="COMMENTARYDOC">

		<!--  Original Target XPath:  regulation:regulation   -->
		<regulation:regulation>
			<!--  MCJ:  output the LA namespace nodes onto the root element.  -->
			<!-- <xsl:for-each select=" in-scope-prefixes( $lexisAdvanceNamespaces ) ">
				<xsl:namespace name="{ . }" select=" namespace-uri-for-prefix( . , $lexisAdvanceNamespaces ) "/>
			</xsl:for-each> -->
			<xsl:call-template name="generateNSGlobalBindings" />
			
			<!-- MCJ:  Create @xsi:schemaLocation based on the global parameter. -->
			<xsl:attribute name="xsi:schemaLocation" select=" $outputSchemaLoc "/>
			
			<!-- MCJ:  Process all attributes that occur on COMMENTARYDOC. -->
			<xsl:apply-templates select="@*" />
			
			<!-- MCJ:  Create @xml:lang using the global named template that uses doc-lang and doc-country. -->
			<xsl:call-template name="xml_lang"/>

            <!-- Create regulation:head.  This implementation needs to be revisited if/when the LBU responds to the CI's request-for-input around creating the head. -->
            <xsl:call-template name="createNZ15RegulationHead" />
			
			<!-- Now process the body. -->
			<xsl:apply-templates select="comm:body" />
			
			<!-- Create doc:metadata. -->
			<doc:metadata>
				<xsl:apply-templates select="docinfo"/>
			</doc:metadata>
		</regulation:regulation>

	</xsl:template>

    <!-- 20170630:  MCJ:  TODO:  Verify that this can be suppressed.  The value is 'regulation' and I am unsure if other values should trigger different behavior. --> 
    <xsl:template match="COMMENTARYDOC/@type"></xsl:template>


</xsl:stylesheet>
