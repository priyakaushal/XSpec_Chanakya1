<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:dita="http://dita.oasis-open.org/architecture/2005/" 
	xmlns:comm="http://www.lexis-nexis.com/glp/comm"
	xmlns:index="urn:x-lexisnexis:content:publicationindex:sharedservices:1"
	xmlns:navaid="urn:x-lexisnexis:content:navigationaid:sharedservices:1" 
	xmlns:ref="http://www.lexisnexis.com/xmlschemas/content/shared/reference/1/"
	version="2.0" exclude-result-prefixes="dita">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="navaid-separate-entry">
      <title>Convert <sourcexml>table/tgroup/[@cols="26"]</sourcexml> to
          <targetxml>navaid:list</targetxml> <lnpid>id-AU16-21022</lnpid></title>
      <body>
        <p>If a <sourcexml>table</sourcexml> contains only one <sourcexml>table/tgroup</sourcexml>
          such that <sourcexml>tgroup/[@cols="26"]</sourcexml>, the contents of the
            <sourcexml>table</sourcexml> becomes
            <targetxml>navaid:landingpagebody/navaid:list/[@style="banner"]</targetxml> and convert
          this table as follows: <ul>
            <li>The contents of each <sourcexml>table/tgroup/entry</sourcexml> element becomes
                <targetxml>navaid:list/index:entry</targetxml> as described in the subtopic <xref href="navaid-separate-details.dita">Convert One <sourcexml>p</sourcexml> Or
                  <sourcexml>entry</sourcexml> To
                <targetxml>navaid:list/index:entry</targetxml></xref> below. </li>
            <li>Within these <sourcexml>table</sourcexml> elements, only the
                <sourcexml>entry</sourcexml> content is converted. All other start-tags and end-tags
              (such as for <sourcexml>table</sourcexml>, <sourcexml>tgroup</sourcexml>,
                <sourcexml>colspec</sourcexml>, and <sourcexml>tbody</sourcexml>) are dropped.</li>
          </ul>
        </p>
        <p>If the <sourcexml>table</sourcexml> described above occurs within a
            <sourcexml>p</sourcexml> (XPath matches <sourcexml>p/table</sourcexml>) and this
            <sourcexml>p</sourcexml> element's only content is the <sourcexml>table</sourcexml>
          described above, the start-tag and end-tag of this <sourcexml>p</sourcexml> (but not the
          content) are dropped.</p>
        <p>If the <sourcexml>table</sourcexml> described above occurs within a
            <sourcexml>pgrp</sourcexml> (XPath matches <sourcexml>pgrp/table</sourcexml> or
            <sourcexml>pgrp/p/table</sourcexml>) and the <sourcexml>table</sourcexml> or the
            <sourcexml>p</sourcexml> that contains the <sourcexml>table</sourcexml> is preceded by a
            <sourcexml>heading</sourcexml>, the <sourcexml>title</sourcexml> within this
            <sourcexml>heading</sourcexml> becomes the <targetxml>title</targetxml> for the created
            <targetxml>navaid:list</targetxml>. In other words, if
            <sourcexml>pgrp/heading</sourcexml> occurs immediately before
            <sourcexml>pgrp/table/tgroup[@cols="26"]</sourcexml> or
            <sourcexml>pgrp/p/table/tgroup[@cols="26"]</sourcexml> (as described above), then
            <sourcexml>pgrp/heading/title</sourcexml> becomes
            <targetxml>navaid:list/title</targetxml>.</p>
        <p>If the <sourcexml>table</sourcexml> described above occurs within a
            <sourcexml>pgrp</sourcexml> (XPath matches <sourcexml>pgrp/table</sourcexml> or
            <sourcexml>pgrp/p/table</sourcexml>), regardless of whether there is a
            <sourcexml>pgrp/heading</sourcexml> element or not, the start-tag and end-tag (but not
          the content) of this <sourcexml>pgrp</sourcexml> are dropped. </p>
  </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-PAC\AU16_navaid\navaid-separate-entry.dita  -->

	<xsl:template match="table[tgroup[@cols = '26']]">
		<navaid:list style='banner'>
			<xsl:if test="parent::p[parent::pgrp]">
				<xsl:apply-templates select="../../heading/title"/>
			</xsl:if>
			<!-- 2017-11-20 - MDS: Added test for parent::pgrp due to Webstar 7049711 -->
			<xsl:if test="parent::pgrp">
				<xsl:apply-templates select="../heading/title"/>
			</xsl:if>
			<xsl:apply-templates select="node()"/>
		</navaid:list>
	</xsl:template>

	<xsl:template match="tgroup[@cols = '26']|tbody[parent::tgroup[@cols = '26']]|
		row[parent::tbody[parent::tgroup[@cols = '26']]]">
		<xsl:apply-templates select="node()"/>
	</xsl:template>
	
	<xsl:template match="colspec[parent::tgroup[@cols = '26']]"/>
	
	<xsl:template match="entry[parent::row[parent::tbody[parent::tgroup[@cols = '26']]]]|
		text[remotelink][parent::p/parent::bodytext/parent::level/parent::comm:body]">
		<index:entry>
			<xsl:apply-templates select="node()"/>
		</index:entry>
	</xsl:template>
	
	<xsl:template match="text[not(remotelink)][parent::p/parent::bodytext/parent::level/parent::comm:body]">
		<index:entry>
			<index:entrytext>
				<xsl:apply-templates select="node()"/>
			</index:entrytext>
		</index:entry>
	</xsl:template>
	
	<!-- JL: 20171107: don't output index:entrytext or inlinenote for whitespace text nodes -->
	<xsl:template match="text()[following-sibling::remotelink and parent::text[parent::p/parent::bodytext/parent::level/parent::comm:body]]">
		<xsl:if test="not(matches(. , '^\s+$'))">
		<index:entrytext><xsl:value-of select="."/></index:entrytext>
		</xsl:if>
	</xsl:template>
	
	<xsl:template match="text()[preceding-sibling::remotelink and parent::text[parent::p/parent::bodytext/parent::level/parent::comm:body]]">
		<xsl:if test="not(matches(. , '^\s+$'))">
		<inlinenote xmlns="http://www.lexisnexis.com/xmlschemas/content/shared/base/1/"  notetype="reference-in-text"><xsl:value-of select="."/></inlinenote>
		</xsl:if>
	</xsl:template>
	
	<xsl:template match="remotelink[parent::entry[parent::row[parent::tbody[parent::tgroup[@cols = '26']]]] or 
		parent::text/parent::p/parent::bodytext/parent::level][$streamID='NZ14']" priority="27">
			<index:locator>
				<ref:lnlink>
					<xsl:attribute name="service">DOCUMENT</xsl:attribute>
					<ref:marker>
						<xsl:apply-templates select="node()"/>
					</ref:marker>
					<ref:locator>
						<xsl:attribute name="anchoridref">
							<xsl:choose>
								<xsl:when test="string(number(substring(@remotekey2, 1, 1))) = 'NaN'">
									<xsl:value-of select="@refpt"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('_', @refpt)"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
						<xsl:choose>
							<xsl:when test="not(@refpt)">
								<xsl:attribute name="anchoridref">
									<xsl:choose>
										<xsl:when test="string(number(substring(@remotekey2, 1, 1))) = 'NaN'">
											<xsl:value-of select="@remotekey2"/>
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('_', @remotekey2)"/>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</xsl:when>
							<xsl:otherwise>
								<xsl:attribute name="anchoridref">
									<xsl:choose>
										<xsl:when test="string(number(substring(@refpt, 1, 1))) = 'NaN'">
											<xsl:value-of select="@refpt"/>
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('_', @refpt)"/>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</xsl:otherwise>
						</xsl:choose>
						<ref:locator-key>
							<ref:key-name name="DOC-ID"/>
							<ref:key-value>
								<xsl:attribute name="value">
									<xsl:choose>
										<xsl:when test="@remotekey1 = 'DOC-ID'">
											<xsl:value-of select="concat(@dpsi, '-')"/>
											<xsl:choose>
												<xsl:when test="not(@remotekey2)"><xsl:value-of select="@refpt"/></xsl:when>
												<xsl:otherwise><xsl:value-of select="@remotekey2"/></xsl:otherwise>
											</xsl:choose>
										</xsl:when>
										<xsl:when test="@remotekey1 = 'REFPTID'">
											<xsl:value-of select="concat(@dpsi, '-')"/>
											<xsl:choose>
												<xsl:when test="@docidref">
													<xsl:value-of select="@docidref"/>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>XXXX</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:when>
									</xsl:choose>
								</xsl:attribute>
							</ref:key-value>
						</ref:locator-key>
					</ref:locator>
				</ref:lnlink>
			</index:locator>
	</xsl:template>
	

</xsl:stylesheet>