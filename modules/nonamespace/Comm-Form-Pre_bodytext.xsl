<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
	xmlns:pubfm="http://www.lexisnexis.com/xmlschemas/content/shared/publication-front-matter/1/"
	xmlns:seclaw="http://www.lexisnexis.com/xmlschemas/content/legal/secondary-law/1/" version="2.0"
	exclude-result-prefixes="dita">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="Comm-Form-Pre_bodytext">
		<title>
			<sourcexml>bodytext</sourcexml>
			<lnpid>id-MY03-16408</lnpid>
		</title>
		<body>
			<section>
				<p><sourcexml>bodytext</sourcexml> becomes
					<targetxml>seclaw:bodytext</targetxml>.</p>
			</section>
		</body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-MY\MY03_Commentary-From-Prece\Comm-Form-Pre_bodytext.dita  -->
	<!--	<xsl:message>Comm-Form-Pre_bodytext.xsl requires manual development!</xsl:message> -->

	<!--<xsl:template match="bodytext">

		<!-\-  Original Target XPath:  seclaw:bodytext   -\->
		<seclaw:bodytext>
			<xsl:apply-templates select="@* | node()"/>
		</seclaw:bodytext>

	</xsl:template>-->
	
	<xsl:template name="levelbodytext" match="bodytext">
		<!-- <xsl:call-template name="leveltype"/>	-->
		<xsl:choose>
			<xsl:when test="@leveltype = 'prelim'">
				<xsl:if test="@leveltype = 'prelim'">
					<seclaw:prelim>
						<xsl:apply-templates select="@subdoc"/>
						<xsl:apply-templates select="@toc-caption"/>
						<xsl:apply-templates select="@id"/>
						<xsl:attribute name="narrativetype">
							<xsl:value-of select="@leveltype"/>
						</xsl:attribute>
						<xsl:choose>
							<xsl:when test="./bodytext">
								<pubfm:narrative>
									<xsl:attribute name="narrativetype">
										<xsl:value-of select="@leveltype"/>
									</xsl:attribute>
									<xsl:apply-templates/>
								</pubfm:narrative>
							</xsl:when>
							<xsl:otherwise>
								<xsl:apply-templates/>
							</xsl:otherwise>
						</xsl:choose>
					</seclaw:prelim>
				</xsl:if>
			</xsl:when>
			<xsl:otherwise>
				<xsl:apply-templates select="node() except heading"/>
			</xsl:otherwise>
		</xsl:choose>
		<!--<xsl:call-template name="amIaDuplicate"/>-->
	</xsl:template>


</xsl:stylesheet>
