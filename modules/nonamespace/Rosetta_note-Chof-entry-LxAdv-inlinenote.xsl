<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:dita="http://dita.oasis-open.org/architecture/2005/" version="2.0"
	exclude-result-prefixes="dita">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/"
		id="Rosetta_note_ChildOf_entry-to-LexisAdvance_inlinenote">
		<title><sourcexml>entry/note</sourcexml> to <targetxml>entry/inlinenote</targetxml>
			<lnpid>id-CCCC-10509</lnpid></title>
		<body>
			<section>
				<p>
					<ul>
						<li> If <sourcexml>note</sourcexml> is the child of
								<sourcexml>entry</sourcexml> then <sourcexml>note</sourcexml> and
							child <sourcexml>p</sourcexml> start-tags and end-tags (but not the
							content) are dropped, and <sourcexml>note/p/text</sourcexml> becomes
								<targetxml>inlinenote</targetxml> with attribute
								<sourcexml>note/@notetype</sourcexml> becoming
								<targetxml>inlinenote/@notetype</targetxml>.</li>
					</ul>
					<note>If source markup comes with this scenario
							"<sourcexml>entry/note/table</sourcexml>" means note comes under entry
						and note having one direct child table (no other child i.e. bodytext) then
						it should be converetd in target
						"<targetxml>entry/p/table</targetxml>".</note>
				</p>
			</section>
			<example>
				<title>Source XML </title>
				<codeblock>
					<![CDATA[
 <row>
  ...
  <entry>Some text of the column...<note type="editor-note">
        <p>
            <text>This is an editorial note.</text>
      </p>
    </note>...more text of the column continuing after the note.</entry>
  ...
</row>
]]>
				</codeblock>
				<title>Target XML</title>
				<codeblock>
					<![CDATA[
<row>
  ...
  <entry>Some text of the paragraph...<inlinenote type="editor-note">This is an editorial note.</inlinenote>...more text of the paragraph continuing after the note.</entry>
  ...
</row>
]]>
				</codeblock>
			</example>
			<section>
				<title>Changes</title>
				<p>2017-09-08: <ph id="change_20170908_SS">Updated the instruction for handing Xpath
							"<sourcexml>entry/note/table</sourcexml>". (Webstar #6839875)</ph></p>
				<p>2017-04-11: <ph id="change_20170411_SS">Added note for handling input xpaths
						scenario "<sourcexml>entry/note/table</sourcexml>". (Webstar
					#6839875)</ph></p>
				<p>2014-10-24: <ph id="change_20141024_JCG">Added this instruction. (R4.5 Content
						Issue List #1994)</ph></p>
			</section>
		</body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\common_newest\Rosetta_note-Chof-entry-LxAdv-inlinenote.dita  -->
	<!--	<xsl:message>Rosetta_note-Chof-entry-LxAdv-inlinenote.xsl requires manual development!</xsl:message> -->

	<xsl:template match="entry/note[$streamID='CA09']">
		<xsl:choose>
			<xsl:when test="child::p and not(child::table)">
				<inlinenote>
					<xsl:if test="@type">
						<xsl:attribute name="notetype">
							<xsl:value-of select="@type"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:apply-templates/>
				</inlinenote>
			</xsl:when>
			<xsl:otherwise>
				<xsl:apply-templates/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="note/table[$streamID='CA09']">
		<p>
			<table>
			<xsl:apply-templates/>
			</table>
		</p>
	</xsl:template>


	<!--<xsl:template match="note">

		<!-\-  Original Target XPath:  inlinenote   -\->
		<inlinenote>
			<xsl:apply-templates select="@* | node()"/>
		</inlinenote>

	</xsl:template>

	<xsl:template match="entry">

		<!-\-  Original Target XPath:  inlinenote   -\->
		<inlinenote>
			<xsl:apply-templates select="@* | node()"/>
		</inlinenote>

	</xsl:template>

	<xsl:template match="p">

		<!-\-  Original Target XPath:  inlinenote   -\->
		<inlinenote>
			<xsl:apply-templates select="@* | node()"/>
		</inlinenote>

	</xsl:template>

	<xsl:template match="note/p/text">

		<!-\-  Original Target XPath:  inlinenote   -\->
		<inlinenote>
			<xsl:apply-templates select="@* | node()"/>
		</inlinenote>

	</xsl:template>

	<xsl:template match="note/@notetype">

		<!-\-  Original Target XPath:  inlinenote/@notetype   -\->
		<inlinenote>
			<xsl:attribute name="notetype">
				<xsl:apply-templates select="node()"/>
			</xsl:attribute>
		</inlinenote>

	</xsl:template>
-->
</xsl:stylesheet>
