<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
  xmlns:dita="http://dita.oasis-open.org/architecture/2005/" 
  xmlns="http://www.lexisnexis.com/xmlschemas/content/shared/base/1/"
  xmlns:courtcase="http://www.lexisnexis.com/xmlschemas/content/legal/courtcase/1/"
  xmlns:jurisinfo="http://www.lexisnexis.com/xmlschemas/content/legal/jurisdiction-info/1/"
xmlns:case="http://www.lexis-nexis.com/glp/case"
  xmlns:primlaw="http://www.lexisnexis.com/xmlschemas/content/legal/primarylaw/1/"  
  xmlns:primlawhist="http://www.lexisnexis.com/xmlschemas/content/legal/primarylaw-history/1/"
  xmlns:ref="http://www.lexisnexis.com/xmlschemas/content/shared/reference/1/" 
  xmlns:leg="http://www.lexis-nexis.com/glp/leg"
  xmlns:decision="http://www.lexisnexis.com/xmlschemas/content/legal/decision/1/"
  xmlns:comm="http://www.lexis-nexis.com/glp/comm"
  xmlns:caseinfo="http://www.lexisnexis.com/xmlschemas/content/legal/case-information/1/"
  xmlns:person="http://www.lexisnexis.com/xmlschemas/content/shared/person/1/"
  xmlns:ci="http://www.lexis-nexis.com/ci"
  xmlns:classify="http://www.lexisnexis.com/xmlschemas/content/shared/classification/1/"
  xmlns:docinfo="http://www.lexis-nexis.com/glp/docinfo"
  xmlns:proc="http://www.lexisnexis.com/xmlschemas/content/shared/process-elements/1/"
  xmlns:legisinfo="http://www.lexisnexis.com/xmlschemas/content/legal/legislation-info/1/"
  xmlns:source_cttr="http://www.lexis-nexis.com/glp/cttr" xmlns:cttr="urn:x-lexisnexis:content:citator:sharedservices:1" version="2.0" exclude-result-prefixes="#all">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="Leg_Citator_AUNZ_Overview_cttr.content">
  <title>cttr:body/cttr:content <lnpid>id-AU20-22256</lnpid></title>
  
  <body>
    
    <section>
      <p>For <sourcexml>cttr:body/cttr:content</sourcexml> output <targetxml>cttr:head/cttr:citedstatlaw[@iscodified="false"]</targetxml>. 
        If <targetxml>cttr:head/cttr:citedstatlaw</targetxml> already exists, then add the target markup described in this 
        overview tab content section within the existing <targetxml>cttr:head/cttr:citedstatlaw</targetxml>, 
        but create a new <targetxml>cttr:legisinfo</targetxml> element and place all overview target markup inside this 
        new, single <targetxml>cttr:legisinfo</targetxml> element.</p>
       
        <p>If <targetxml>cttr:head/cttr:citedstatlaw</targetxml> already exists but has no 
        @iscodified="false" attribute value, add this attribute value.</p>
    </section>

    <section>
      <title>
        Changes:
      </title>
      <p>2015-12-04: <ph id="change_20151204a_snb">Clarified <sourcexml>cttr:body/cttr:content</sourcexml> to 
        specify that overview target markup is placed within a new single 
        <targetxml>cttr:legisinfo</targetxml> element.</ph></p>
      <p>2015-11-16: <ph id="change_20151116_snb">Changed instruction for <sourcexml>cttr:body/cttr:content</sourcexml> 
        to create <targetxml>cttr:head/cttr:citedstatlaw</targetxml> instead 
        of <targetxml>cttr:head/cttr:citedseclaw</targetxml>, and added specification that overview content should be added 
        at the end of any content within an already existing <targetxml>cttr:head/cttr:citedstatlaw</targetxml>.</ph></p>
    </section>
        
  </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-PAC\AU20_Legislative_Citator\Leg_Citator_AUNZ_Overview_cttr.content.dita  -->
 <xsl:template match="source_cttr:content" mode="overview">
      <cttr:legisinfo>
         <xsl:apply-templates select="@* | node()"/>
      </cttr:legisinfo>
   </xsl:template>

   <xsl:template match="source_cttr:content" mode="analytics">
      <!--<xsl:apply-templates select="../leg:info" mode="summarysc"/>-->      
      <cttr:refs>
         <xsl:attribute name="reftype">analytical</xsl:attribute>
         <xsl:element name="ref:anchor">
            <xsl:attribute name="id">
               <xsl:text>ref-analytical</xsl:text>
            </xsl:attribute>
         </xsl:element>
         <xsl:apply-templates select="@* | node()"/>
      </cttr:refs>
   </xsl:template>

   <xsl:template match="source_cttr:content" mode="cases">
      <xsl:apply-templates select="../leg:info" mode="summarysc"/>      
            <cttr:refs>
               <xsl:attribute name="reftype">cases</xsl:attribute>
               <xsl:element name="ref:anchor">
                  <xsl:attribute name="id">
                     <xsl:text>ref-cases</xsl:text>
                  </xsl:attribute>
               </xsl:element>
               <xsl:apply-templates select="@* | node()"/>
            </cttr:refs>
      
   </xsl:template>
   <!--<xsl:template match="note[parent::leg:info]"></xsl:template>-->
   <xsl:template match="source_cttr:content" mode="history">
     <!-- <xsl:variable name="annotation-data" select="normalize-space(.)"/>
      <xsl:variable name="title-data" select="normalize-space(./source_cttr:annotations/heading/title[.='History'])"/>-->
    
      <!-- Awantika:2017-11-30- removing mode as only cases will have "Case Totals" -->
      
      <!-- <xsl:apply-templates select="../leg:info" mode="summarysc"/>-->  
      <cttr:history>
         <primlawhist:primlawhist>
            <xsl:choose>
               <xsl:when test="./source_cttr:annotations/heading/title[.='History']">
                  <xsl:element name="ref:anchor">
                     <xsl:attribute name="id">
                        <xsl:text>ref-history</xsl:text>
                     </xsl:attribute>
                  </xsl:element>
                  <!-- Awantika:2017-11-27- removed hard coded heading/title as it is being processed bt below apply-templates-->
                  <!-- Awantika:2017-11-28- added condition to check if only heading tile is coming and no data in nested elements then create only heading title. -->
                  <!--<xsl:if test="$annotation-data = $title-data">
                     <heading>
                        <title>History</title>
                     </heading>
                  </xsl:if>-->
                  
               </xsl:when>
               <xsl:otherwise>
                  <xsl:element name="ref:anchor">
                     <xsl:attribute name="id">
                        <xsl:text>ref-history</xsl:text>
                     </xsl:attribute>
                  </xsl:element>
                  <heading>
                     <title>History</title>
                  </heading>
               </xsl:otherwise>
            </xsl:choose>
            <xsl:apply-templates select="@* | node()"/>
         </primlawhist:primlawhist>
      </cttr:history>
   </xsl:template>

<xsl:template match="@signal"/>

   <xsl:template match="source_cttr:annot">
      <xsl:if test="comm:citations">
         <cttr:refitem>
            <cttr:citingpub>
               <xsl:attribute name="treatment">
                  <xsl:text>citation</xsl:text>
               </xsl:attribute>
               <xsl:apply-templates select="heading/title"></xsl:apply-templates>
               <xsl:apply-templates select="@* | node() except heading"/>
            </cttr:citingpub>           
         </cttr:refitem>
      </xsl:if>
     
   </xsl:template>
   
   <xsl:template match="source_cttr:annot/comm:citations">
      <xsl:if test="h">
         <cttr:citations>
            <xsl:apply-templates select="@* | node() except comm:citetext"/>
         </cttr:citations>
         <xsl:if test="comm:citetext">
            <xsl:apply-templates select="comm:citetext"></xsl:apply-templates>
         </xsl:if>
      </xsl:if>
   </xsl:template>
   
   <xsl:template match="source_cttr:annot/comm:citations/comm:citetext">
      <bodytext>
         <p>
            <text>
               <xsl:apply-templates select="@* | node()"/>
            </text>
         </p>
      </bodytext>
   </xsl:template>
   
  <!-- <xsl:template match="source_cttr:annot/heading/title">
      <xsl:choose>
         <xsl:when test="lnlink">
            <xsl:apply-templates select="@* | node()"/>
         </xsl:when>
         <xsl:when test="link">
            <xsl:apply-templates select="@* | node()"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:apply-templates select="@* | node()"/>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>-->
  
  <!-- <xsl:template match="comm:citations">
      <xsl:apply-templates select="@* |node()"/>
   </xsl:template>

   <xsl:template match="comm:citetext">
      <xsl:apply-templates select="@* |node()"/>
   </xsl:template>-->

   <xsl:template match="comm:info">
      <xsl:apply-templates select="@* |node()"/>
   </xsl:template>
   <!-- Awantika: Conversion should compare all entry values in tbody/row[all] -->
   <xsl:template match="source_cttr:annotation/@annotationtype"/>

   <xsl:template match="source_cttr:annotations">
      <xsl:if test="normalize-space(.)!=''">
         <xsl:variable name="annotation-data" select="normalize-space(.)"/>
         <xsl:variable name="title-data" select="normalize-space(./heading/title)"/>
         <xsl:choose>
            <xsl:when test="$annotation-data = $title-data">
               <!-- Awantika:2017-11-29- Updated for history if there is no data in the nested elements then create heading title only. Webstar #7050793 and #7055441  -->
               <xsl:if test="./heading/title[.='History']">
                  <heading>
                     <title>History</title>
                  </heading>
               </xsl:if>
            </xsl:when>
            <xsl:when test="@id='OP4' or @id='OI6' or @id='OP5' or @id='OI10' or @id='OP11' or @id='OP26'">
               <ref:relatedcontent>
                  <xsl:if test="@id='OP4'">
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-OP4</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="contenttype">
                        <xsl:text>corresponding-form</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">
                           <xsl:text>ref-corresponding-form</xsl:text>
                        </xsl:attribute>
                     </xsl:element>
                  </xsl:if>
                  <xsl:if test="@id='OI6'">
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-OI6</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="contenttype">
                        <xsl:text>enabling-legislation</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">
                           <xsl:text>ref-enabling-legislation</xsl:text>
                        </xsl:attribute>
                     </xsl:element>
                  </xsl:if>
                  <xsl:if test="@id='OP5'">
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-OP5</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="contenttype">
                        <xsl:text>penalty</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">
                           <xsl:text>ref-penalty</xsl:text>
                        </xsl:attribute>
                     </xsl:element>
                  </xsl:if>
                  <xsl:if test="@id='OI10' or @id='OP11'">
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-LPG</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="contenttype">
                        <xsl:text>guidance</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">
                           <xsl:text>ref-lexisnexis-practical-guidance</xsl:text>
                        </xsl:attribute>
                     </xsl:element>
                     <!-- <xsl:apply-templates select="heading"/>-->
                  </xsl:if>
                  <xsl:if test="@id='OP26'">
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-OP26</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="contenttype">
                        <xsl:text>case-activity-view-all-cases</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">
                           <xsl:text>ref-case-activity-view-all-cases</xsl:text>
                        </xsl:attribute>
                     </xsl:element>
                     <ref:relatedcontentitem>
                        <ref:related-content-link>
                           <ref:lnlink>
                              <ref:marker>View All Cases</ref:marker>
                              <ref:locator>
                                 <xsl:attribute name="anchoridref">ref-cases</xsl:attribute>
                                 <xsl:attribute name="anchortype">local</xsl:attribute>
                              </ref:locator>
                           </ref:lnlink>
                        </ref:related-content-link>
                     </ref:relatedcontentitem>
                  </xsl:if>
                  <xsl:apply-templates select="node()"/>
               </ref:relatedcontent>
            </xsl:when>
            <xsl:when test="child::heading/note/h[.='Former Title'] or child::heading/title[.='Former Title']">
               <primlawhist:primlawhist>
                  <primlawhist:histgrp>
                     <xsl:attribute name="grptype">former-title</xsl:attribute>
                     <xsl:attribute name="xml:id">
                        <xsl:choose>
                           <xsl:when test="../../../child::heading and ../../../@id">
                              <xsl:value-of select="concat('refsection','-',../../../@id)"/>
                           </xsl:when>
                           <xsl:when test="parent::note/@id">
                              <xsl:value-of select="concat('refsection','-',parent::note/@id)"/>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:text>refsection-former-title</xsl:text>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-former-title</xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="heading/note"/>
                     <xsl:apply-templates select="heading"/>
                     <xsl:if test="child::heading/note/h[.='Former Title'] or child::heading/title[.='Former Title'] and child::source_cttr:annot/leg:info">
                        <xsl:apply-templates select="node() except heading" mode="formerOI2"/>
                     </xsl:if>
                     <!-- <xsl:apply-templates select="heading/note/h"/>
          <xsl:apply-templates select="heading/note/p/text" mode="former"/>
          <xsl:apply-templates select="source_cttr:annot/leg:info/leg:officialname" mode="former"/>-->
                  </primlawhist:histgrp>
               </primlawhist:primlawhist>
            </xsl:when>
            <xsl:when test="child::heading/note/h[.='Replacing'] or child::heading/title[.='Replacing']">
               <primlawhist:primlawhist>
                  <primlawhist:histgrp>
                     <xsl:attribute name="grptype">replacing</xsl:attribute>
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-replacing</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-replacing</xsl:attribute>
                     </xsl:element>
                     <xsl:if test="child::cttr:annot/leg:info/leg:officialname and child::cttr:annot/leg:info/note | child::heading/note">
                        <primlawhist:histitem>
                           <textitem>
                              <xsl:apply-templates select="@* | node()"/>
                           </textitem>
                        </primlawhist:histitem>
                     </xsl:if>
                  </primlawhist:histgrp>
               </primlawhist:primlawhist>
            </xsl:when>
            <xsl:when test="child::heading/note/h[.='Act Name' or .='ActName']">
               <primlawhist:primlawhist>
                  <primlawhist:histgrp>
                     <xsl:attribute name="grptype">act-name</xsl:attribute>
                     <xsl:attribute name="xml:id">
                        <xsl:text>refsection-OP14</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-act-name</xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="node()"/>
                     <xsl:apply-templates select="child::heading/note/p/text"></xsl:apply-templates>
                     <!--<xsl:if test="child::heading/note/p/text/lnlink">
                        <primlawhist:histitem>
                           <textitem>
                              <xsl:apply-templates select="child::heading/note/p/text/lnlink,child::heading/note/p/text"></xsl:apply-templates>
                           </textitem>
                        </primlawhist:histitem>
                     </xsl:if> -->
                  </primlawhist:histgrp>
               </primlawhist:primlawhist>
            </xsl:when>
            <xsl:when test="child::heading/title[.='Summary'] and child::heading/note[@id='OI13'] except heading/note[@id='OI14' or @id='OI15' or @id='OI16']/p/text/lnlink/marker['List of Provisions' or 'Defined Terms' or 'Government Website']">
               
                  <primlaw:synopsis>
                     <xsl:if test="child::heading/note[@id='OI13']">
                        <xsl:attribute name="xml:id">
                           <xsl:text>refsection-OI13</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:apply-templates select="heading"/>
                     <bodytext>
                        <xsl:apply-templates select="child::heading/note[@id='OI13']/p except heading"/>
                     </bodytext>
                    <!-- <xsl:if test="child::heading/note[@id='OI14']">
                        <xsl:attribute name="xml:id">
                           <xsl:text>refsection-OI14</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="child::heading/note[@id='OI15']">
                        <xsl:attribute name="xml:id">
                           <xsl:text>refsection-OI15</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="child::heading/note[@id='OI16']">
                        <xsl:attribute name="xml:id">
                           <xsl:text>refsection-OI16</xsl:text>
                        </xsl:attribute>
                     </xsl:if>-->
                     
                     <xsl:apply-templates select="heading/note[@id='OI13'] except heading/note[@id='OI14' or @id='OI16']"/>
                  </primlaw:synopsis>
               
               
               <xsl:apply-templates select="heading[descendant::lnlink/marker['List of Provisions' or 'Defined Terms' or 'Government Website']] | heading/remotelink"
                                    mode="provision"/>
            </xsl:when>
            
            <xsl:when test="child::heading/title[.='Summary'] and child::heading/note[@id='OI13' or @id='OI14' or @id='OI15' or @id='OI16'] and heading[descendant::lnlink/marker['List of Provisions' or 'Defined Terms' or 'Government Website']]">
               <xsl:apply-templates select="heading[descendant::lnlink/marker['List of Provisions' or 'Defined Terms' or 'Government Website']] | heading/remotelink"
                  mode="provision"/>
            </xsl:when>
            
            <xsl:when test="source_cttr:annotsummary[@id='OI19' or @id='OP23']">
               <xsl:apply-templates/>
            </xsl:when>
            <xsl:when test="source_cttr:annotsummary[@id='OI20' or @id='OP24']">
               <xsl:apply-templates/>
            </xsl:when>
            <xsl:when test="contains(lower-case($docinfoidtext),'analytics')">
<!--               <xsl:if test="@id='AMI1' and source_cttr:annot[@signal='citation']">
                  <cttr:refsection>
                     <xsl:attribute name="xml:id='refsection-annotated-legislation'"></xsl:attribute>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <ref:anchor>
                        <xsl:attribute name="id">
                           <xsl:text>ref-annotated-legislation</xsl:text>
                        </xsl:attribute>
                     </ref:anchor>
                  </cttr:refsection>
               </xsl:if>-->
               <xsl:if test="@id='AMI1' and child::heading/title[.='Annotated Legislation']">
                  <cttr:refsection>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <xsl:attribute name="xml:id">refsection-annotated-legislation</xsl:attribute>
                     <ref:anchor>
                        <xsl:attribute name="id">
                           <xsl:text>ref-annotated-legislation</xsl:text>
                        </xsl:attribute>
                     </ref:anchor>
                     <xsl:apply-templates select="node()"/>
                     <xsl:if test="source_cttr:annot[normalize-space()='']">
                        <cttr:refitem>
                           <bodytext/>
                        </cttr:refitem>
                     </xsl:if>
                  </cttr:refsection>
               </xsl:if>
               <xsl:if test="source_cttr:annot[@signal='citation'] and not(@id='AMI1' or @annotationtype='subseqarticles' or @annotgroup='LNZ' or @annotgroup='HLA')">
                  <cttr:refsection>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <xsl:if test="@annotgroup='BOO'">
                        <xsl:attribute name="xml:id">refsection-BOO</xsl:attribute>
                     </xsl:if>
                     <!--<xsl:if test="@annotgroup='HLA'">
                        <xsl:attribute name="xml:id">refsection-HLA</xsl:attribute>
                     </xsl:if>-->
                     <xsl:if test="@annotgroup='LNZ'">
                        <xsl:attribute name="xml:id">refsection-LNZ</xsl:attribute>
                     </xsl:if>
                     <xsl:if test="@annotgroup='COM'">
                        <xsl:attribute name="xml:id">refsection-COM</xsl:attribute>
                     </xsl:if>
                     <xsl:if test="@annotgroup='LPG'">
                        <xsl:attribute name="xml:id">refsection-LPG-analytical</xsl:attribute>
                     </xsl:if>
                     <xsl:if test="@annotgroup='LTS'">
                        <xsl:attribute name="xml:id">refsection-LTS</xsl:attribute>
                     </xsl:if>
                    <!-- <xsl:if test="@annotationtype='subseqarticles'">
                        <xsl:attribute name="xml:id">refsection-JNB</xsl:attribute>
                     </xsl:if>-->
                     <xsl:if test="@annotgroup='DICT'">
                        <xsl:attribute name="xml:id">refsection-DICT</xsl:attribute>
                     </xsl:if>
                     <xsl:element name="ref:anchor">
                        <xsl:if test="@annotgroup='BOO'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-textbooks</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                      <!--  <xsl:if test="@annotgroup='HLA'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-halsburys</xsl:text>
                           </xsl:attribute>
                        </xsl:if>-->
                        <!--<xsl:if test="@annotgroup='LNZ'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-LNZ</xsl:text>
                           </xsl:attribute>
                        </xsl:if>-->
                        <xsl:if test="@annotgroup='COM'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-commentary</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@annotgroup='LPG'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-guidance</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="sectiontype">
                              <xsl:text>practicalguidance</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@annotgroup='LTS'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-legal-topic-summaries</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@annotationtype='subseqarticles'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-journals-newsletters-bulletins</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@annotgroup='DICT'">
                           <xsl:attribute name="id">
                              <xsl:text>ref-dictionaries</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                     </xsl:element>
                     <xsl:apply-templates select="heading"/>
                     <xsl:apply-templates select="@* | node() except heading"></xsl:apply-templates>
                     <!--<xsl:if test="source_cttr:annot/comm:citations">
                        <cttr:refitem>
                           <cttr:citingpub>
                              <xsl:attribute name="treatment">
                                 <xsl:text>citation</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="@annotgroup='BOO'"><!-\- <cttr:refsection>-\-><!-\-<xsl:attribute name="reftype">citing-publications</xsl:attribute>-\->
                                 <xsl:if test="source_cttr:annot[@signal='citation']/comm:info/contrib">
                                    <cttr:descriptors>
                                       <cttr:descriptorsection>
                                          <xsl:attribute name="descriptortype">
                                             <xsl:text>abstract</xsl:text>
                                          </xsl:attribute>
                                          <heading>
                                             <note>
                                                <xsl:attribute name="notetype">
                                                   <xsl:text>other</xsl:text>
                                                </xsl:attribute>
                                                <byline>
                                                   <person:contributor>
                                                      <xsl:attribute name="contributor-type">
                                                         <xsl:text>author</xsl:text>
                                                      </xsl:attribute>
                                                      <person:person>
                                                         <person:name.text>
                                                            <xsl:apply-templates select="@* | node()"/>
                                                         </person:name.text>
                                                      </person:person>
                                                   </person:contributor>
                                                </byline>
                                             </note>
                                          </heading>
                                       </cttr:descriptorsection>
                                    </cttr:descriptors>
                                 </xsl:if>
                                 <xsl:if test="source_cttr:annot[@signal='citation']/comm:info/isbn">
                                    <cttr:descriptors>
                                       <cttr:descriptorsection>
                                          <xsl:attribute name="descriptortype">
                                             <xsl:text>abstract</xsl:text>
                                          </xsl:attribute>
                                          <heading>
                                             <note>
                                                <xsl:attribute name="notetype">
                                                   <xsl:text>other</xsl:text>
                                                </xsl:attribute>
                                                <byline>
                                                   <person:contributor>
                                                      <xsl:attribute name="contributor-type">
                                                         <xsl:text>author</xsl:text>
                                                      </xsl:attribute>
                                                      <person:person>
                                                         <person.bio>
                                                            <person:bio.text>
                                                               <classify:classification>
                                                                  <xsl:attribute name="classscheme">
                                                                     <xsl:text>isbn</xsl:text>
                                                                  </xsl:attribute>
                                                                  <classify:classitem>
                                                                     <classify:classitem-identifier>
                                                                        <classify:classcode>
                                                                           <xsl:apply-templates select="@* | node()"/>
                                                                        </classify:classcode>
                                                                     </classify:classitem-identifier>
                                                                  </classify:classitem>
                                                               </classify:classification>
                                                            </person:bio.text>
                                                         </person.bio>
                                                      </person:person>
                                                   </person:contributor>
                                                </byline>
                                             </note>
                                          </heading>
                                       </cttr:descriptorsection>
                                    </cttr:descriptors>
                                 </xsl:if>
                                 <!-\-</cttr:refsection>-\->
                              </xsl:if>
                              <xsl:choose>
                                 <xsl:when test="source_cttr:annot/heading/title or source_cttr:annot/comm:info/title">
                                    <xsl:choose>
                                       <xsl:when test="lnlink">
                                          <xsl:apply-templates select="@* | node()"/>
                                       </xsl:when>
                                       <xsl:when test="link">
                                          <xsl:apply-templates select="@* | node()"/>
                                       </xsl:when>
                                       <xsl:otherwise>
                                          <xsl:apply-templates select="@* | node()"/>
                                       </xsl:otherwise>
                                    </xsl:choose>
                                 </xsl:when>
                                 <!-\- Awantika: if none of the above condition is true create empty title -\->
                                 <xsl:otherwise>
                                    <title/>
                                 </xsl:otherwise>
                              </xsl:choose>
                              <xsl:if test="source_cttr:annot/comm:citations/h">
                                 <cttr:citations>
                                    <xsl:if test="h/ci:cite">
                                       <xsl:apply-templates select="ci:cite"/>
                                    </xsl:if>
                                    <xsl:if test="h/link">
                                       <xsl:apply-templates select="link"/>
                                    </xsl:if>
                                    <xsl:if test="source_cttr:annot/comm:citations/h/lnlink">
                                       <xsl:apply-templates select="source_cttr:annot/comm:citations/h/lnlink"/>
                                    </xsl:if>
                                 </cttr:citations>
                              </xsl:if>
                              <xsl:if test="source_cttr:annot/comm:citations/comm:citetext">
                                 <bodytext>
                                    <p>
                                       <text>
                                          <xsl:apply-templates select="source_cttr:annot/comm:citations/comm:citetext"/>
                                       </text>
                                    </p>
                                 </bodytext>
                              </xsl:if>
                           </cttr:citingpub>
                        </cttr:refitem>
                     </xsl:if>-->
                  </cttr:refsection>
               </xsl:if>
              
               <xsl:if test="@annotgroup='HLA'">
          <cttr:refsection>
            <xsl:attribute name="reftype">citing-publications</xsl:attribute>
            <xsl:attribute name="xml:id">refsection-HLA</xsl:attribute>
            <ref:anchor>
              <xsl:attribute name="id">
                <xsl:text>ref-halsburys</xsl:text>
              </xsl:attribute>
            </ref:anchor>
            <xsl:apply-templates select="@* | node()"/>
             <xsl:if test="source_cttr:annot[normalize-space()='']">
                <cttr:refitem>
                   <bodytext/>
                </cttr:refitem>
             </xsl:if>
          </cttr:refsection>
        </xsl:if>
               <xsl:if test="@annotgroup='LNZ'">
          <cttr:refsection>
            <xsl:attribute name="reftype">citing-publications</xsl:attribute>
            <xsl:attribute name="xml:id">refsection-LNZ</xsl:attribute>
            <ref:anchor>
              <xsl:attribute name="id">
                <xsl:text>ref-LNZ</xsl:text>
              </xsl:attribute>
            </ref:anchor>
            <xsl:apply-templates select="@* | node()"/>
             <xsl:if test="source_cttr:annot[normalize-space()='']">
                <cttr:refitem>
                   <bodytext/>
                </cttr:refitem>
             </xsl:if>
          </cttr:refsection>
        </xsl:if>
               <!-- <xsl:if test="@annotgroup='COM'">
          <cttr:refsection>
            <xsl:attribute name="reftype">citing-publications</xsl:attribute>
            <xsl:attribute name="xml:id">refsection-COM</xsl:attribute>
            <ref:anchor>
              <xsl:attribute name="id">
                <xsl:text>ref-commentary</xsl:text>
              </xsl:attribute>
            </ref:anchor>
            <xsl:apply-templates select="@* | node()"/>
             <xsl:if test="source_cttr:annot[normalize-space()='']">
                <cttr:refitem>
                   <bodytext/>
                </cttr:refitem>
             </xsl:if>
          </cttr:refsection>
        </xsl:if>-->
               <xsl:if test="@annotgroup='LPG'">
                  <cttr:refsection>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <xsl:attribute name="xml:id">refsection-LPG-analytical</xsl:attribute>
                     <xsl:attribute name="sectiontype">
                        <xsl:text>practicalguidance</xsl:text>
                     </xsl:attribute>
                     <ref:anchor>
                        <xsl:attribute name="id">
                           <xsl:text>ref-guidance</xsl:text>
                        </xsl:attribute>
                     </ref:anchor>
                     <xsl:apply-templates select="@* | node()"/>
                     <xsl:if test="source_cttr:annot[normalize-space()='']">
                        <cttr:refitem>
                           <bodytext/>
                        </cttr:refitem>
                     </xsl:if>
                  </cttr:refsection>
               </xsl:if>
               <xsl:if test="@annotgroup='LTS'">
                  <cttr:refsection>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <xsl:attribute name="xml:id">refsection-LTS</xsl:attribute>
                     <ref:anchor>
                        <xsl:attribute name="id">
                           <xsl:text>ref-legal-topic-summaries</xsl:text>
                        </xsl:attribute>
                     </ref:anchor>
                     <xsl:apply-templates select="@* | node()"/>
                     <xsl:if test="source_cttr:annot[normalize-space()='']">
                        <cttr:refitem>
                           <bodytext/>
                        </cttr:refitem>
                     </xsl:if>
                  </cttr:refsection>
               </xsl:if>
               <xsl:if test="@annotationtype='subseqarticles'">
                  <cttr:refsection>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <xsl:attribute name="xml:id">refsection-JNB</xsl:attribute>
                     <ref:anchor>
                        <xsl:attribute name="id">
                           <xsl:text>ref-journals-newsletters-bulletins</xsl:text>
                        </xsl:attribute>
                     </ref:anchor>
                     <xsl:apply-templates select="@* | node()"/>
                     <xsl:if test="source_cttr:annot[normalize-space()='']">
                        <cttr:refitem>
                           <bodytext/>
                        </cttr:refitem>
                     </xsl:if>
                  </cttr:refsection>
               </xsl:if>
               <!--<xsl:if test="@annotgroup='DICT'">
                  <cttr:refsection>
                     <xsl:attribute name="reftype">citing-publications</xsl:attribute>
                     <xsl:attribute name="xml:id">refsection-DICT</xsl:attribute>
                     <ref:anchor>
                        <xsl:attribute name="id">
                           <xsl:text>ref-dictionaries</xsl:text>
                        </xsl:attribute>
                     </ref:anchor>
                     <xsl:apply-templates select="@* | node()"/>
                     <xsl:if test="source_cttr:annot[normalize-space()='']">
                        <cttr:refitem>
                           <bodytext/>
                        </cttr:refitem>
                     </xsl:if>
                  </cttr:refsection>
               </xsl:if>-->
               <xsl:if test="@annotgroup='jumps'">
                  <cttr:refsection>
                     <cttr:refitem>
                        <bodytext>
                           <textitem>
                              <xsl:apply-templates select="@* | node()"/>
                           </textitem>
                        </bodytext>
                     </cttr:refitem>
                  </cttr:refsection>
               </xsl:if>
            </xsl:when>
            <xsl:when test="contains(lower-case($docinfoidtext),'cases')">
               <xsl:if test="source_cttr:annotsummary[@id='CI1'][@display-name='Cases by Provision and Source']">
                  <xsl:if test="source_cttr:annotsummary[@id='CI1'][@display-name='Cases by Provision and Source']/table">
                     <cttr:refssummary>
                        <xsl:attribute name="xml:id">
                           <xsl:text>CI1</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="summarytype">
                           <xsl:text>CIsummarychart</xsl:text>
                        </xsl:attribute>
                        <cttr:refssummarygroup>
                           <xsl:attribute name="grouptype">
                              <xsl:text>Provision</xsl:text>
                           </xsl:attribute>
                           <xsl:for-each select="source_cttr:annotsummary[@id='CI1']/table/tgroup/tbody/row">
                              <cttr:refssummaryitem>
                                 <xsl:attribute name="documenttype">
                                    <xsl:text>case</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:value-of select="./entry/lnlink/marker"/>
                                 </xsl:attribute>
                                 <xsl:value-of select="./entry[2]/text()"/>
                              </cttr:refssummaryitem>
                           </xsl:for-each>
                           <!--<xsl:apply-templates/>-->
                        </cttr:refssummarygroup>
                        <xsl:for-each select="source_cttr:annotsummary[@id='CI1']/table/tgroup/tbody/row">
                           <cttr:refssummaryitem>
                              <xsl:attribute name="documenttype">
                                 <xsl:text>case</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:value-of select="./entry/lnlink/marker"/>
                              </xsl:attribute>
                              <!--<xsl:value-of select="./entry[2]/text()"/>-->
                              <xsl:apply-templates select="node()"/>
                           </cttr:refssummaryitem>
                        </xsl:for-each>
                     </cttr:refssummary>
                  </xsl:if>
               </xsl:if>
               <xsl:if test="source_cttr:annotsummary[@id='CI2'][@display-name='Cases by Court and Year']">
                  <cttr:refssummary>
                     <xsl:attribute name="xml:id">
                        <xsl:text>CI2</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="summarytype">
                        <xsl:text>subseqcases</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="source_cttr:annotsummary[@display-name='Cases by Court and Year'][@id='CI2']/table">
                        <cttr:refssummarygroup>
                           <xsl:attribute name="grouptype">
                              <xsl:text>Year</xsl:text>
                           </xsl:attribute>
                           <cttr:refssummaryitem>
                              <xsl:attribute name="documenttype">
                                 <xsl:text>case</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>start-year</xsl:text>
                              </xsl:attribute>
                              <xsl:value-of select="source_cttr:annotsummary[@id='CI2']/table/tgroup/thead/row/entry[2]"/>
                           </cttr:refssummaryitem>
                           <cttr:refssummaryitem>
                              <xsl:attribute name="documenttype">
                                 <xsl:text>case</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>end-year</xsl:text>
                              </xsl:attribute>
                              <xsl:value-of select="source_cttr:annotsummary[@id='CI2']/table/tgroup/thead/row/entry[last()]"/>
                           </cttr:refssummaryitem>
                           <xsl:variable name="maxcaseperyear">
                              <xsl:if test="count(source_cttr:annotsummary[@id='CI2']/table/tgroup/tbody/row/entry[preceding-sibling::entry]) &gt; 0">
                                 <xsl:for-each select="source_cttr:annotsummary[@id='CI2']/table/tgroup/tbody/row/entry[preceding-sibling::entry]">
                                    <xsl:sort select="." order="descending"/>
                                    <xsl:if test="position() = 1">
                                       <xsl:value-of select="."/>
                                    </xsl:if>
                                 </xsl:for-each>
                              </xsl:if>
                           </xsl:variable>
                           <cttr:refssummaryitem>
                              <xsl:attribute name="documenttype">
                                 <xsl:text>case</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>max-cases-per-year</xsl:text>
                              </xsl:attribute>
                              <xsl:value-of select="$maxcaseperyear"/>
                           </cttr:refssummaryitem>
                        </cttr:refssummarygroup>
                        <cttr:refssummarygroup>
                           <xsl:attribute name="grouptype">
                              <xsl:text>Court</xsl:text>
                           </xsl:attribute>
                           <xsl:for-each select="source_cttr:annotsummary[@id='CI2']/table/tgroup/tbody/row/entry[not(preceding-sibling::entry)]">
                              <cttr:refssummaryitem>
                                 <xsl:attribute name="documenttype">
                                    <xsl:text>case</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                                 <xsl:value-of select="sum(../entry[preceding-sibling::entry])"/>
                              </cttr:refssummaryitem>
                           </xsl:for-each>
                        </cttr:refssummarygroup>
                     </xsl:if>
                     <xsl:if test="source_cttr:annotsummary[@display-name='Totals']">
                        <xsl:if test="source_cttr:annotsummary[@display-name='Totals']/table">
                           <cttr:refssummarygroup>
                              <xsl:attribute name="grouptype">
                                 <xsl:text>CaseTotals</xsl:text>
                              </xsl:attribute>
                              <xsl:for-each select="source_cttr:annotsummary[@display-name='Totals']/table/tgroup/tbody/row">
                                 <cttr:refssummaryitem>
                                    <xsl:attribute name="documenttype">
                                       <xsl:text>case</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:value-of select="if(./entry[2][@id='CI5'] or ./entry[1][.='TOTAL CASES']) then 'caseTotal'                            else if(./entry[2][@id='CI6'] or ./entry[1][.='LAST 12 MONTHS']) then 'case12mos'                            else if(./entry[2][@id='CI7'] or ./entry[1][.='REPORTED']) then 'caseReported'                            else 'blank'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="if(./entry[@id='CI5']) then ./entry[@id='CI5']/text() else if(./entry[@id='CI6']) then ./entry[@id='CI6']/text()                         else if(./entry[@id='CI7']) then ./entry[@id='CI7']/text() else 'blank'"/>
                                 </cttr:refssummaryitem>
                              </xsl:for-each>
                           </cttr:refssummarygroup>
                        </xsl:if>
                     </xsl:if>
                     <xsl:if test="source_cttr:annotsummary/table/p-limited[@id='CI4']">
                        <cttr:refssummaryitem>
                           <xsl:attribute name="documenttype">
                              <xsl:text>note</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>CI4</xsl:text>
                           </xsl:attribute>
                           <xsl:apply-templates select="source_cttr:annotsummary/table/p-limited[@id='CI4']/text()"/>
                        </cttr:refssummaryitem>
                     </xsl:if>
                  </cttr:refssummary>
               </xsl:if>
               <xsl:if test="@annotationtype='subseqcases' and heading/title[@id='CI11.1' or contains(.,'Consideration of
                  Whole Act') or contains(.,'Consideration of Provision')] and not(source_cttr:annotsummary[@id='CI1'][@display-name='Cases by Provision and Source'])"><!--<xsl:if test="./heading/title[@id='CI11.1'] or .='Consideration of Whole Act' or .='Consideration of Provision'">-->
                  <cttr:refsection>
                     <xsl:attribute name="reftype">
                        <xsl:text>considered-cases</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">
                           <xsl:text>refsection-001</xsl:text>
                        </xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="heading"/>
                     <xsl:for-each select="./source_cttr:annot">
                        <cttr:refitem>
                           <cttr:citingcase>
                              <xsl:attribute name="treatment">
                                 <xsl:text>citation</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="./case:info">
                                 <cttr:caseinfo>
                                    <xsl:if test="./case:info/case:casename">
                                       <caseinfo:casename>
                                          <caseinfo:fullcasename>
                                             <xsl:apply-templates select="./case:info/case:casename/text()"/>
                                          </caseinfo:fullcasename>
                                       </caseinfo:casename>
                                    </xsl:if>
                                    <xsl:if test="./case:citations/case:citetext/                           ci:cite">
                                       <cttr:citations>
                                          <xsl:apply-templates select="./case:citations/case:citetext/                               ci:cite"/>
                                       </cttr:citations>
                                    </xsl:if>
                                    <xsl:if test="./case:info/case:courtinfo">
                                       <jurisinfo:courtinfo>
                                          <xsl:if test="./case:info/case:courtinfo/case:courtcode">
                                             <jurisinfo:alternatecourtcode>
                                                <xsl:attribute name="alternatecourtcode">
                                                   <xsl:value-of select="./case:info/case:courtinfo/case:courtcode"/>
                                                </xsl:attribute>
                                             </jurisinfo:alternatecourtcode>
                                          </xsl:if>
                                          <xsl:if test="./case:info/case:courtinfo/case:courtname">
                                             <jurisinfo:courtname>
                                                <xsl:apply-templates select="./case:info/case:courtinfo/case:courtname"/>
                                             </jurisinfo:courtname>
                                          </xsl:if>
                                       </jurisinfo:courtinfo>
                                       <xsl:if test="./case:info/case:courtinfo/case:judges">
                                          <courtcase:judges>
                                             <person:judge>
                                                <xsl:value-of select="./case:info/case:courtinfo/case:judges"/>
                                             </person:judge>
                                          </courtcase:judges>
                                       </xsl:if>
                                    </xsl:if>
                                    <xsl:if test="./case:info/case:constituents">
                                       <xsl:choose>
                                          <xsl:when test="./case:info/case:constituents[@constituenttype='barristers']">
                                             <caseinfo:constituents>
                                                <xsl:attribute name="constituenttype">
                                                   <xsl:text>barristers</xsl:text>
                                                </xsl:attribute>
                                                <person:counselor>
                                                   <xsl:apply-templates select="./case:info/case:constituents[@constituenttype='barristers']"/>
                                                </person:counselor>
                                             </caseinfo:constituents>
                                          </xsl:when>
                                          <xsl:when test="./case:info/case:constituents[@constituenttype='solicitors']">
                                             <caseinfo:constituents>
                                                <xsl:attribute name="constituenttype">
                                                   <xsl:text>solicitors</xsl:text>
                                                </xsl:attribute>
                                                <person:counselor>
                                                   <xsl:apply-templates select="./case:info/case:constituents[@constituenttype='solicitors']"/>
                                                </person:counselor>
                                             </caseinfo:constituents>
                                          </xsl:when>
                                          <xsl:otherwise>
                                             <caseinfo:constituents>
                                                <person:counselor>
                                                   <xsl:apply-templates select="./case:info/case:constituents"/>
                                                </person:counselor>
                                             </caseinfo:constituents>
                                          </xsl:otherwise>
                                       </xsl:choose>
                                    </xsl:if>
                                    <xsl:if test="./case:info/case:courtinfo/case:dates/case:decisiondate/date">
                                       <xsl:apply-templates select="./case:info/case:courtinfo/case:dates"/>
                                    </xsl:if>
                                 </cttr:caseinfo>
                              </xsl:if>
                              <!--<cttr:citingcase>-->
                              <cttr:usagegroup>
                                 <cttr:usage usagetype="neutral">
                                    <text>Cited</text>
                                 </cttr:usage>
                              </cttr:usagegroup>
                              <!--</cttr:citingcase>-->
                              <xsl:apply-templates select="descendant::ci:content/remotelink"/>
                           </cttr:citingcase>
                           <xsl:if test="./case:citations/note[@display-name='Catchwords']">
                              <cttr:descriptors>
                                 <cttr:descriptorsection descriptortype="words-and-phrases">
                                    <classify:classification classscheme="words-and-phrases">
                                       <classify:classitem>
                                          <classify:classitem-identifier>
                                             <classify:classname>
                                                <xsl:apply-templates select="./case:citations/note"/>
                                             </classify:classname>
                                          </classify:classitem-identifier>
                                       </classify:classitem>
                                    </classify:classification>
                                 </cttr:descriptorsection>
                              </cttr:descriptors>
                           </xsl:if>
                        </cttr:refitem>
                     </xsl:for-each>
                  </cttr:refsection>
                  <!--</xsl:if>-->
               </xsl:if>
            </xsl:when>
            <xsl:when test="contains(lower-case($docinfoidtext),'history')">
               <xsl:apply-templates select="heading except heading[../@annotgroup[.='prov-am']] except heading[../@annotgroup[.='prov-al']] except heading[contains(.,'Assent')] except heading[parent::source_cttr:annotations[@id='HI15']]"/>
               <xsl:if test="child::heading/title[.='History'] and child::source_cttr:annotsummary/table">
                  <primlawhist:histgrp>
                     <xsl:attribute name="grptype">HI1-History</xsl:attribute>
                     <xsl:for-each select="./source_cttr:annotsummary/table/tgroup/tbody/row">
                        <primlawhist:histitem>
                           <xsl:if test="count(preceding-sibling::entry) = 0">
                              <xsl:element name="primlawhist:histitemdiv">
                                 <xsl:attribute name="divtype">heading</xsl:attribute>
                                 <xsl:element name="textitem">
                                    <xsl:value-of select="./entry[1]"/>
                                 </xsl:element>
                              </xsl:element>
                           </xsl:if>
                           <xsl:if test="./entry[not(count(preceding-sibling::entry) = 0)]">
                              <xsl:for-each select="./entry[not(count(preceding-sibling::entry) = 0)]">
                                 <xsl:element name="primlawhist:histitemdiv">
                                    <xsl:attribute name="divtype">text</xsl:attribute>
                                    <xsl:element name="textitem">
                                       <xsl:apply-templates/>
                                    </xsl:element>
                                 </xsl:element>
                              </xsl:for-each>
                           </xsl:if>
                        </primlawhist:histitem>
                     </xsl:for-each>
                  </primlawhist:histgrp>
               </xsl:if>
               <xsl:if test="child::heading/note[@id='HI4']| child::heading/title[.='Assent']">
                  <primlawhist:histgrp>
                     <xsl:attribute name="xml:id">
                        <xsl:text>assent-HI4</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="grptype">assent</xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-assent</xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="heading"/>
                     <primlawhist:histitem>
                        <xsl:if test="child::heading/note[@id='HI4']/p">                           
                              <!--<textitem>-->
                              <xsl:apply-templates select="child::heading/note/p"/>
                              <!--</textitem>-->
                           
                        </xsl:if>
                        <xsl:for-each select="child::source_cttr:annotsummary/table/tgroup/tbody/row">
                           <xsl:apply-templates/>
                        </xsl:for-each>
                     </primlawhist:histitem>
                  </primlawhist:histgrp>
               </xsl:if>
               <xsl:if test="child::source_cttr:annotsummary[@id='commencement']">
                  <primlawhist:histgrp>
                     <xsl:attribute name="xml:id">
                        <xsl:text>commencement</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="grptype">commencement</xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-commencement</xsl:attribute>
                     </xsl:element>
                     <xsl:if test="child::source_cttr:annotsummary/table/title">
                        <heading>
                           <title>
                              <xsl:value-of select="./child::source_cttr:annotsummary/table/title"/>
                           </title>
                        </heading>
                     </xsl:if>
                     <xsl:for-each select="child::source_cttr:annotsummary[@id='commencement']/table/tgroup/tbody/row">
                        <primlawhist:histitem>
                           <xsl:if test="count(preceding-sibling::entry) = 0">
                              <xsl:element name="primlawhist:histitemdiv">
                                 <xsl:attribute name="divtype">heading</xsl:attribute>
                                 <xsl:element name="textitem">
                                    <xsl:value-of select="./entry[1]"/>
                                 </xsl:element>
                              </xsl:element>
                           </xsl:if>
                           <xsl:if test="./entry[not(count(preceding-sibling::entry) = 0)] and normalize-space()=''">
                              <xsl:for-each select="./entry[not(count(preceding-sibling::entry) = 0)]">
                                 <xsl:element name="primlawhist:histitemdiv">
                                    <xsl:attribute name="divtype">text</xsl:attribute>
                                    <xsl:apply-templates/>
                                 </xsl:element>
                              </xsl:for-each>
                           </xsl:if>
                        </primlawhist:histitem>
                     </xsl:for-each>
                     <xsl:if test="child::source_cttr:annotsummary[@id='commencement']/table/p-limited">
                        <primlawhist:histitem>
                           <primlawhist:histitemdiv>
                              <xsl:attribute name="divtype">text</xsl:attribute>
                              <textitem>
                                 <xsl:value-of select="child::source_cttr:annotsummary[@id='commencement']/table/p-limited"/>
                              </textitem>
                           </primlawhist:histitemdiv>
                        </primlawhist:histitem>
                     </xsl:if>
                  </primlawhist:histgrp>
               </xsl:if>
               <xsl:if test="@id='HI15' or @id='HP4'">
                  <primlawhist:histgrp>
                     <xsl:attribute name="grptype">amending</xsl:attribute>
                     <xsl:attribute name="xml:id">
                        <xsl:value-of select="@id"/>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-amendinglegislation</xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="heading"/>
                     <xsl:for-each select="child::source_cttr:annot">
                        <xsl:if test="normalize-space()!=''">
                           <primlawhist:histitem>
                              <xsl:if test="child::heading/note[@notetype='xref']/p[1]/text">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">
                                       <xsl:text>heading</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                       <xsl:text>amending</xsl:text>
                                    </xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="heading/note[@notetype='xref']/p[1]/text"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                              <xsl:if test="child::heading/note[@notetype='xref']/p[count(preceding-sibling::p)=1]/text">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">
                                       <xsl:text>text</xsl:text>
                                    </xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="heading/note[@notetype='xref']/p[count(preceding-sibling::p)=1]/text"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                              <xsl:for-each select="heading/note[@notetype='xref']/p[@class='HI15.4']">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">
                                       <xsl:text>text</xsl:text>
                                    </xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="heading/note[@notetype='xref']/p[@class='HI15.4']"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:for-each>
                              <xsl:if test="heading/note[@notetype='xref']/p[@class='HI15.6']">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">
                                       <xsl:text>text</xsl:text>
                                    </xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="heading/note[@notetype='xref']/p[@class='HI15.6']"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                              <xsl:if test="heading/note/p[not(@class='HI15.6'or @class='HI15.4' or @class='HI15.4')]/text">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">
                                       <xsl:text>text</xsl:text>
                                    </xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="heading/note/p[@*][not(@class='HI15.6'or @class='HI15.4' or @class='HI15.4')]/text"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                           </primlawhist:histitem>
                        </xsl:if>
                     </xsl:for-each>
                     <xsl:if test="child::source_cttr:annot/leg:citations/leg:citetext">
                        <primlawhist:histitem>
                           <primlawhist:histitemdiv>
                              <textitem>
                                 <xsl:apply-templates/>
                              </textitem>
                           </primlawhist:histitemdiv>
                        </primlawhist:histitem>
                     </xsl:if>
                  </primlawhist:histgrp>
               </xsl:if>
               <xsl:if test="@annotgroup='prov-am'">
                  <primlawhist:histgrp>
                     <xsl:attribute name="xml:id">
                        <xsl:text>prov-am</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="grptype">
                        <xsl:text>provision-amendments</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-provision-amendments</xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="heading"/>
                     <xsl:for-each select="child::source_cttr:annot[normalize-space(.)!='']">
                        <primlawhist:histitem>
                           <xsl:if test="./heading/title | ./heading/subtitle">
                              <xsl:if test="./heading/title[.='commence'] | ./heading/subtitle[.='commence']">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">heading</xsl:attribute>
                                    <xsl:attribute name="status">commencement</xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="./heading/title,./heading/subtitle"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                              <xsl:if test="./heading/title[.='amend'] | ./heading/subtitle[.='amend']">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">heading</xsl:attribute>
                                    <xsl:attribute name="status">amending</xsl:attribute>
                                    <textitem>
                                       <xsl:apply-templates select="./heading/title,./heading/subtitle"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                              <xsl:if test="heading/title">
                                 <primlawhist:histitemdiv>
                                    <xsl:attribute name="divtype">
                                       <xsl:text>heading</xsl:text>
                                    </xsl:attribute>
                                    <textitem>
                                       <xsl:value-of select="heading/title"/>
                                    </textitem>
                                 </primlawhist:histitemdiv>
                              </xsl:if>
                           </xsl:if>
                           <!-- Awantika: Added check to handle empty p/text. for webstar#7052510  -->
                           <xsl:for-each select="./heading/note/p[normalize-space()!='']">
                              <primlawhist:histitemdiv>
                                 <xsl:attribute name="divtype">
                                    <xsl:value-of select="if((count(preceding-sibling::p) = 0) and ((count(../preceding-sibling::note) = 0) and ancestor::heading[title or subtitle])) then 'text' else 'additionalinfo'"/>
                                 </xsl:attribute>
                                 <xsl:attribute name="status">
                                    <xsl:text>commencement</xsl:text>
                                 </xsl:attribute>
                                 <xsl:apply-templates select="@* | node()"/>
                              </primlawhist:histitemdiv>
                           </xsl:for-each>
                        </primlawhist:histitem>
                     </xsl:for-each>
                  </primlawhist:histgrp>
               </xsl:if>
               <xsl:if test="@annotgroup='prov-al'">
                  <primlawhist:histgrp>
                     <xsl:attribute name="xml:id">
                        <xsl:text>prov-al</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="grptype">
                        <xsl:text>amending-legislation</xsl:text>
                     </xsl:attribute>
                     <xsl:element name="ref:anchor">
                        <xsl:attribute name="id">ref-amendinglegislation</xsl:attribute>
                     </xsl:element>
                     <xsl:apply-templates select="heading"/>
                     <xsl:for-each select="./heading/note[child::*[not(self::p[not(child::*)])]]">                        
                        <!-- JL note has to have something in it that is not an empty p wrapper -->
                        <primlawhist:histitem>
                           <xsl:if test="./lnlink[not(following-sibling::*[1][local-name()='p'])]">
                              <primlawhist:histitemdiv>
                                 <xsl:attribute name="divtype">act</xsl:attribute>
                                 <xsl:attribute name="status">amending</xsl:attribute>
                                 <textitem>
                                    <xsl:apply-templates/>
                                 </textitem>
                              </primlawhist:histitemdiv>
                           </xsl:if>
                           <xsl:for-each select="./p[child::* or preceding-sibling::*[1][self::lnlink]]">
                              <!-- JL: if there is no child of p  or first preceding sibling of lnlink,
                                 there is nothing to do.  if we output the wrapper with nothing to do, the output is invalid
                                 to schema.  Webstar 7046010. -->
                              <primlawhist:histitemdiv>
                                 <!--<xsl:choose>
                                    <xsl:when test="@class='act'">
                                       <xsl:attribute name="divtype">act</xsl:attribute>
                                       <xsl:attribute name="status">amending</xsl:attribute>
                                       <xsl:apply-templates/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                       <xsl:attribute name="divtype">additionalinfo</xsl:attribute>
                                       <xsl:apply-templates/>
                                    </xsl:otherwise>
                                 </xsl:choose>-->
                                 <xsl:choose>                            
                                    <xsl:when test="preceding-sibling::*[1][local-name()='lnlink']">
                                       <textitem>
                                          <xsl:copy-of select="preceding-sibling::*[1][local-name()='lnlink']"/>
                                          <xsl:for-each select="./text"><!-- <textitem>-->
                                             <xsl:apply-templates/>
                                             <!--</textitem>-->
                                          </xsl:for-each>
                                       </textitem>
                                    </xsl:when>
                                    <xsl:otherwise>
                                       <xsl:choose>
                                          <xsl:when test="./@class='act'">
                                             <xsl:attribute name="divtype">act</xsl:attribute>
                                             <xsl:attribute name="status">amending</xsl:attribute>
                                             <xsl:apply-templates/>
                                          </xsl:when>
                                          <xsl:otherwise>
                                             <xsl:attribute name="divtype">additionalinfo</xsl:attribute>
                                             <xsl:apply-templates/>
                                          </xsl:otherwise>
                                       </xsl:choose>
                                       <xsl:for-each select="./text">
                                          <textitem>
                                             <xsl:apply-templates/>
                                          </textitem>
                                       </xsl:for-each>
                                    </xsl:otherwise>
                                 </xsl:choose>
                              </primlawhist:histitemdiv>
                           </xsl:for-each>
                        </primlawhist:histitem>
                     </xsl:for-each>
                  </primlawhist:histgrp>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:if>
   </xsl:template>

   <xsl:template match="note"/>

   <xsl:template match="source_cttr:annotsummary">
      <xsl:apply-templates/>
   </xsl:template>

<!--   <xsl:template match="source_cttr:annotsummary/table/title">
      <xsl:apply-templates/>
   </xsl:template>-->

   <xsl:template match="source_cttr:annotsummary/table">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:courtname">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:judges">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:judges/case:judge">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:constituents">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:constituents/p">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:constituents/p/text">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="case:dates">
      <decision:dates>
         <xsl:apply-templates select="@* | node()"/>
      </decision:dates>
   </xsl:template>

   <xsl:template match="note[@display-name='Catchwords']">
      <xsl:apply-templates/>
   </xsl:template>

   <!-- Awantika:2017-11-27- Added priority to remove the ambiguity from module Rosetta_p-LxAdv-p.xsl
      line number 748 "p[text[not(node()) or (string() and not(normalize-space()) and not(*))] and count(*)=1 ]" -->
   <xsl:template match="note[@display-name='Catchwords']/p" priority="1">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="note[@display-name='Catchwords']/p/text">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="inlineobject" mode="citator-ref">
      <xsl:if test="contains(@alttext , 'Click for CaseBase entry')">
         <xsl:attribute name="referencedresourcesentiment">
            <xsl:choose>
               <xsl:when test="starts-with(@alttext , 'Citation')">
                  <xsl:text>none</xsl:text>
               </xsl:when>
               <xsl:when test="starts-with(@alttext , 'Positive')">
                  <xsl:text>positive</xsl:text>
               </xsl:when>
               <xsl:when test="starts-with(@alttext , 'Neutral')">
                  <xsl:text>neutral</xsl:text>
               </xsl:when>
               <xsl:when test="starts-with(@alttext , 'Negative')">
                  <xsl:text>negative</xsl:text>
               </xsl:when>
               <xsl:when test="starts-with(@alttext , 'Cautionary')">
                  <xsl:text>cautionary</xsl:text>
               </xsl:when>
               <xsl:when test="starts-with(@alttext , 'Click')">
                  <xsl:text>none</xsl:text>
               </xsl:when>
               <xsl:when test="starts-with(@alttext , '5 - Click')">
                  <xsl:text>none</xsl:text>
               </xsl:when>
            </xsl:choose>
         </xsl:attribute>
      </xsl:if>
   </xsl:template>

   <xsl:template match="source_cttr:annotations[not(@annotgroup='prov-al')]/heading[descendant::lnlink/marker['List of Provisions' or 'Defined Terms' or 'Government Website']] | source_cttr:annotations[not(@annotgroup='prov-al')]/heading/remotelink"
                 mode="provision">
      <xsl:for-each-group select="*"
                          group-adjacent="if(self::note except self::note[@id='OI13']) then 1 else 0">
         <xsl:choose>
            <xsl:when test="current-grouping-key()=1">
               <ref:relatedcontent>
                  <xsl:attribute name="xml:id">refsection-links</xsl:attribute>
                  <xsl:attribute name="contenttype">more-links</xsl:attribute>
                  <ref:anchor>
                     <xsl:attribute name="id">
                        <xsl:text>ref-more-links</xsl:text>
                     </xsl:attribute>
                  </ref:anchor>
                  <heading>
                     <title>More Links</title>
                  </heading>
                  <xsl:for-each select="current-group()">
                     <ref:relatedcontentitem>
                        <ref:related-content-link>
                           <xsl:apply-templates select="node() except p/text"/>
                        </ref:related-content-link>
                     </ref:relatedcontentitem>
                  </xsl:for-each>
               </ref:relatedcontent>
            </xsl:when>
            <xsl:otherwise/>
         </xsl:choose>
      </xsl:for-each-group>
   </xsl:template>

   <xsl:template match="source_cttr:annotations[not(@annotgroup='prov-al')]/heading/note[@id='OI14'or @id='OI15' or @id='OI16']/p/text">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="source_cttr:annotations[not(@annotgroup='prov-al')]/heading/note[@id='OI14' or @id='OI16' or @id='OI15']/p">
      <xsl:apply-templates/>
   </xsl:template>

   <xsl:template match="source_cttr:annotations[not(@annotgroup='prov-al')]/heading/note[not(@id='OI14' or @id='OI16' or 'HI4')]">
      <xsl:choose>
         <xsl:when test="ancestor::source_cttr:annotations[@id='OI12' or @id='OP15A' or @id='OP15' or @id='OI17']">
            <xsl:if test="child::p/text[not(contains(ancestor::note/h,'More Links'))] | child::l/li/p/text">
               <legisinfo:status>
                  <legisinfo:statustext>
                     <proc:nl/>
                     <proc:nl/>
                     <xsl:apply-templates select="p/text/text(),l/li/p/text/text()"/>
                     <!--<xsl:apply-templates/>-->
                    
                     <!-- Any lnlink or remotelink mapping -->
                     <xsl:apply-templates select="p/text/lnlink, p/text/remotelink, l/li/p/text/remotelink, l/li/p/text/lnlink except h except title"/>
                  </legisinfo:statustext>
               </legisinfo:status>
            </xsl:if>
           <!-- <xsl:if test="child::p/text[ancestor::source_cttr:annotations[@id='OP15']]">
               <legisinfo:status>
                  <legisinfo:statustext>
                     <proc:nl/>
                     <proc:nl/>
                     <xsl:apply-templates select="p/text/text(),l/li/p/text/text(),p/inlineobject"/>
                     <!-\-<xsl:apply-templates/>-\->
                     
                     <!-\- Any lnlink or remotelink mapping -\->
                     <xsl:apply-templates select="p/text/lnlink, p/text/remotelink, l/li/p/text/remotelink, l/li/p/text/lnlink except h except title"/>
                  </legisinfo:statustext>
               </legisinfo:status>
            </xsl:if>-->
            <!-- <xsl:if test="contains(lower-case($docinfoidtext),'overview') and ancestor::source_cttr:annotations[@id='OP15']/heading/note/h[contains(.,'More Links')] ">
          <xsl:apply-templates select="../../heading[descendant::lnlink/marker['List of Provisions' or 'Defined Terms' or 'Government Website']] | ../../heading/remotelink" mode="provision"/> 
        </xsl:if>-->
         </xsl:when>
         <!-- Awantika: Added @id='OI13' or @id='OI14' or @id='OI16' as there is nothing mentioned in CI for these and as per DT
      these are converting inside bodytext-->
         <xsl:when test="@id='OI13'">
            <bodytext>
               <xsl:apply-templates select="node()"/>
            </bodytext>
         </xsl:when>
         <xsl:otherwise>
            <xsl:apply-templates select="@* | node() except child::h except title"/>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>

   <xsl:template match="source_cttr:annotations[@annotgroup='prov-am']/source_cttr:annot/heading/title">
      <textitem>
         <xsl:apply-templates/>
      </textitem>
   </xsl:template>

   <xsl:template match="source_cttr:annotations[@*][not(@id='OP5NZ')]/heading"
                 priority="2">
      <xsl:if test="note/h">
         <heading>
            <xsl:choose>
               <xsl:when test="./note/h='ActName' or ./note/h='Act Name'">
                  <title>
                     <xsl:text>Act Name</xsl:text>
                  </title>
               </xsl:when>
               <xsl:otherwise>
                  <title>
                     <xsl:choose>
                        <xsl:when test="contains(lower-case($docinfoidtext),'overview') and ../../source_cttr:annotations[@id='OP15']/heading/note/h[@id='OP15A']">
                           <xsl:apply-templates select="note/h[@id='OP15A']"/>
                        </xsl:when>
                        <xsl:when test="contains(lower-case($docinfoidtext),'overview')and ../../source_cttr:annotations[@id='OP15']/heading/note">
                          <xsl:text>Bills Warning</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:apply-templates/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </title>
                  <xsl:choose>
                     <xsl:when test="contains(lower-case($docinfoidtext),'overview') and ../../source_cttr:annotations[@id='OP15']/heading/note/h[@id='OP15A'] or ../../source_cttr:annotations[@id='OP15']/heading/note"/>
                     <xsl:otherwise>
                        <xsl:apply-templates select="@* |node()"/>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:otherwise>
            </xsl:choose>
         </heading>
         <xsl:if test="contains(lower-case($docinfoidtext),'overview')">
            <xsl:apply-templates select="@* |node()"/>
         </xsl:if>
      </xsl:if>
      <xsl:if test="title">
         <xsl:choose>
            <xsl:when test=".='ActName' or .='Act Name'">
               <heading>
                  <xsl:text>Act Name</xsl:text>
               </heading>
            </xsl:when>
            <xsl:otherwise>
               <xsl:choose>
                  <xsl:when test="following-sibling::source_cttr:annotsummary[@id='OP24']"/>
                  <xsl:otherwise>
                     <xsl:choose>
                        <xsl:when test="/CITATORDOC[contains(lower-case($docinfoidtext),'overview')] and child::title">
                           <xsl:choose>
                              <xsl:when test="parent::source_cttr:annotations[@id='activity']"/>
                              <xsl:otherwise>
                                 <xsl:if test="normalize-space()!='' and title[.!='']">
                                    <heading>
                                       <xsl:apply-templates select="title except subtitle"/>
                                    </heading>
                                 </xsl:if>
                                 <xsl:apply-templates select="@* |node() except subtitle except title"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:when>
                       <!-- <xsl:when test="following-sibling::source_cttr:annot/heading/title and /CITATORDOC[contains(lower-case($docinfoidtext),'analytics')]"></xsl:when>-->
                        <xsl:otherwise>
                           <heading>
                              <xsl:apply-templates select="node() except subtitle"/>
                           </heading>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:otherwise>
               </xsl:choose>
            </xsl:otherwise>
         </xsl:choose>
         <xsl:if test="lnlink">
            <xsl:apply-templates select="@* | node()"/>
         </xsl:if>
         <xsl:if test="link">
            <xsl:apply-templates select="@* | node()"/>
         </xsl:if>
      </xsl:if>
   </xsl:template>

   <xsl:template match="@annotgroup"/>
   <xsl:template match="@annotationtype"/>
   <xsl:template match="@notetype"/>

   <xsl:template match="source_cttr:annotations/@annotationtype[.='productuse']"/>

   <xsl:template match="source_cttr:annotations/@annotgroup[.='LPG']"/>
   <!-- <xsl:template match="source_cttr:annotations/source_cttr:annot/leg:info/note[not(@*)][descendant::*[not(@*)][normalize-space(.)='']]"/>-->
   <xsl:template match="source_cttr:annotations/source_cttr:annot/leg:info/note[not(@*)][count(descendant::*[@*]) = 0][normalize-space(.)='']"/>
</xsl:stylesheet>