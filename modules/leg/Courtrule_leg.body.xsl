<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:leg="http://www.lexis-nexis.com/glp/leg" xmlns:courtrule="http://www.lexisnexis.com/xmlschemas/content/legal/courtrule/1/" xmlns:primlaw="http://www.lexisnexis.com/xmlschemas/content/legal/primarylaw/1/" version="2.0" exclude-result-prefixes="dita leg">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="leg.body">
  <title>leg:body <lnpid>id-ST02-26409</lnpid></title>
  <body>
    <section>
      <p><sourcexml>leg:body</sourcexml> becomes <targetxml>courtrule:body</targetxml>. The mappings
        for the children of <targetxml>courtrule:body</targetxml> are discussed as separate
        topics.</p>
      <note> If the input document contains only <sourcexml>leg:info</sourcexml> and no other sibling elements within
        <sourcexml>leg:body</sourcexml>  then create an EMPTY instance of
          <targetxml>primlaw:level</targetxml> in target within
          <targetxml>courtrule:body</targetxml> as shown below:</note>      
    </section>
      <example>
        <title>Target XML</title>
        <codeblock>      

&lt;courtrule:body&gt;
  &lt;primlaw:level leveltype="unclassified"&gt;
    &lt;!--courtrule:body is not present in Document which creates Body part. As 'Body' is mandatory, creating empty body structure--&gt;
  &lt;/primlaw:level&gt;
&lt;/courtrule:body&gt;

        </codeblock>
        </example>    
    </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-Standard\Courtrule\leg.body.dita  -->
	<xsl:message>Courtrule_leg.body.xsl requires manual development!</xsl:message> 

	<xsl:template match="leg:body">

		<!--  Original Target XPath:  courtrule:body   -->
		<courtrule:body>
			<xsl:apply-templates select="@* | node()"/>
		</courtrule:body>

	</xsl:template>

	<xsl:template match="leg:info">

		<!--  Original Target XPath:  primlaw:level   -->
		<primlaw:level>
			<xsl:apply-templates select="@* | node()"/>
		</primlaw:level>

	</xsl:template>

</xsl:stylesheet>