<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:primlawinfo="http://www.lexisnexis.com/xmlschemas/content/legal/primarylaw-info/1/" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:leg="http://www.lexis-nexis.com/glp/leg" xmlns:courtrule="http://www.lexisnexis.com/xmlschemas/content/legal/courtrule/1/" version="2.0" exclude-result-prefixes="dita leg">
  
	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="leg.info">
  <title>leg:info <lnpid>id-CA08-14217</lnpid></title>
  <body>
    <section>
      <p><sourcexml>leg:info</sourcexml> becomes <targetxml>legis:legis/legis:head/primlawinfo:primlawinfo/legisinfo:legisinfo</targetxml>. The mappings for the children of <targetxml>leg:info</targetxml> are discussed as separate topics.</p>
      <note>The attribute <sourcexml>leg:info/@subseqdoc</sourcexml> will be suppressed from conversion.</note>
    </section> 
    <example>
      <title>Mapping of <sourcexml>leg:info</sourcexml></title>
      <codeblock>

&lt;LEGDOC...&gt;
  &lt;leg:body&gt;
    &lt;leg:info&gt;
      &lt;!-- ... --&gt;
    &lt;/leg:info&gt;
  &lt;/leg:body&gt;
&lt;/LEGDOC&gt;

      </codeblock>
      <b>becomes</b>
      <codeblock>

&lt;legis:legis&gt;
    &lt;legis:head&gt;
      &lt;primlawinfo:primlawinfo&gt;
          &lt;legisinfo:legisinfo&gt;
            &lt;!-- ... --&gt;
          &lt;/legisinfo:legisinfo&gt;
        &lt;/primlawinfo:primlawinfo&gt;
    &lt;/legis:head&gt;
&lt;/legis:legis&gt;

        </codeblock>
    </example>  
  </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-CAN\CA08-Constitutions\leg.info.dita  -->
<!--<xsl:include href="../leg/CA08-Constitutions_leg.num.xsl"/>-->
<!--  <xsl:include href="../leg/CA08-Constitutions_leg.dates.xsl"/>
  <xsl:include href="../leg/CA08-Constitutions_leg.juris.xsl"/>
  <xsl:include href="../leg/CA08-Constitutions_leg.officialname.xsl"/>
  <xsl:include href="../leg/CA08-Constitutions_leg.officialnum.xsl"/>-->
  
  
	<xsl:template match="leg:info">

		<!--  Original Target XPath:  legis:legis/legis:head/primlawinfo:primlawinfo/legisinfo:legisinfo   -->
		
			  
			
			    <xsl:apply-templates select="child::leg:num[not(text()[contains(., 'solsak')])]"/>
	 <!-- <xsl:if test="not(child::leg:num)">
	    <xsl:apply-templates select="child::leg:officialnum" mode="parallelcite"/>  
	    
	  </xsl:if>-->
	  
	  
			    <xsl:apply-templates select="child::leg:relatedleg"/>
			    <primlawinfo:primlawinfo>
			      
			      <xsl:apply-templates select="child::leg:num [text()[contains(., 'solsak')]]"/>
			      <xsl:apply-templates select="child::leg:officialname"/>
			      <xsl:apply-templates select="child::leg:dates"/>
			      <xsl:apply-templates select="child::leg:officialnum"/>
			      
			    </primlawinfo:primlawinfo>
			    <xsl:apply-templates select="child::leg:juris"/>
	</xsl:template>
			  
			  
			  <xsl:template match="leg:info/@subseqdoc"/>
			  
			  
			  
			<!--</legis:head>-->
		<!--</legis:legis>-->

	
  
  
  

<!--	<xsl:template match="leg:info/@subseqdoc">

		<!-\-  Original Target XPath:     -\->
		<!-\-  Could not determine target element or attribute name:  <>  -\->
	  <!-\-<xsl:apply-templates select="@* | node()"/>
		-\-><!-\-  Could not determine target element or attribute name:  </>  -\->

	</xsl:template>-->

</xsl:stylesheet>