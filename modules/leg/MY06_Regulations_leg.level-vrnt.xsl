<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:leg="http://www.lexis-nexis.com/glp/leg" xmlns:primlaw="http://www.lexisnexis.com/xmlschemas/content/legal/primarylaw/1/" xmlns:glp="http://www.lexis-nexis.com/glp" version="2.0" exclude-result-prefixes="dita leg">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="leg.level-vrnt">
    <title>leg:level-vrnt <lnpid>id-MY06-17217</lnpid></title>
    <body>
        <section>
            <sourcexml>leg:level-vrnt</sourcexml> will be omitted and all its contents will be
            retained in conversion <note>In New Lexis <targetxml>primlaw:level</targetxml> element
                is used instead of Rosetta elements <sourcexml>leg:level</sourcexml> and
                    <sourcexml>leg:level-vrnt</sourcexml>. So element
                    <sourcexml>leg:level-vrnt</sourcexml> will be omitted from conversion and
                attributes <sourcexml>/leg:level-vrnt/@leveltype</sourcexml> will become
                    <targetxml>primlaw:level/@leveltype</targetxml> with its value,
                    <sourcexml>/leg:level-vrnt/@searchtype</sourcexml> will be suppressed,
                    <sourcexml>/leg:level-vrnt/@subdoc</sourcexml> will become
                    <targetxml>primlaw:level/@includeintoc</targetxml> with its value and
                    <sourcexml>/leg:level-vrnt/@toc-caption</sourcexml> will become
                    <targetxml>/primlaw:level/@alternatetoccaption</targetxml> with all its
                value.</note>
        </section>    
    </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-MY\MY06_Regulations\leg.level-vrnt.dita  -->
<!--	<xsl:message>MY06_Regulations_leg.level-vrnt.xsl requires manual development!</xsl:message> -->

	<xsl:template match="leg:level-vrnt/@leveltype">
		<xsl:variable name="levelTypeValues"
			select="tokenize('act,addendum,amendment,annex,appendix,article,canon,chapter,clause,constitution,companion,division,dictionary,exhibit,endnote,form,hierarchy-note,introduction,instrument,order,paragraph,part,preamble,regulation,rule,schedule,section,subarticle,subchapter,subclause,subdivision,subparagraph,subpart,subrule,subregulation,subschedule,subsection,subtitle,supplement,table-of-contents,title,topic,treaty,agency,subagency', ',')"/>
		<!--  Original Target XPath:  @leveltype   -->
		<xsl:attribute name="leveltype">
			<xsl:choose>
				<xsl:when test="index-of($levelTypeValues, .)">
					<xsl:value-of select="."/>
				</xsl:when>
				<!-- JL accommodating some HK misspellings which are routine -->
				<xsl:when test=". = 'rul'">
					<xsl:text>rule</xsl:text>
				</xsl:when>
				<xsl:when test=". = 'subrul'">
					<xsl:text>subrule</xsl:text>
				</xsl:when>
				<xsl:when test=". = 'reg'">
					<xsl:text>regulation</xsl:text>
				</xsl:when>
				<xsl:when test=". = 'subreg'">
					<xsl:text>subregulation</xsl:text>
				</xsl:when>
				<xsl:when test=". = 'sect'">
					<xsl:text>section</xsl:text>
				</xsl:when>
				<!-- MDS - 2017-04-14 - Taken from Instructions in '/leg/MY06_Regulations_leg.level.xsl' -->
				<xsl:when test="$streamID = 'MY06'">
					<xsl:choose>
						<xsl:when test=". = 'attachments'">attachment</xsl:when>
						<xsl:when test=". = 'comm.intro'">annotation-group</xsl:when>
						<xsl:when test=". = 'convention'">treaty</xsl:when>
						<xsl:when test=". = 'group'">chapter</xsl:when>
						<xsl:when test=". = 'leg-inst'">instrument</xsl:when>
						<xsl:when test=". = 'miscins'">instrument</xsl:when>
						<xsl:when test=". = 'proc-guide'">procedural-guide</xsl:when>
						<xsl:when test=". = 'reg-code'">regulatory-code</xsl:when>
						<xsl:when test=". = 'release'">instrument</xsl:when>
						<xsl:when test=". = 'scale'">schedule</xsl:when>
						<xsl:when test=". = 'scalep'">paragraph</xsl:when>
						<xsl:when test=". = 'scales'">schedule</xsl:when>
						<xsl:when test=". = 'scalesp'">paragraph</xsl:when>
						<xsl:when test=". = 'schedulegrp'">schedule</xsl:when>
						<xsl:when test=". = 'subgroup'">subchapter</xsl:when>
						<xsl:when test=". = 'summary'">introduction</xsl:when>
						<xsl:when test=". = 'subsect'">subsection</xsl:when>
						<xsl:otherwise>
							<xsl:text>unclassified</xsl:text>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
				<xsl:otherwise>
					<xsl:text>unclassified</xsl:text>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:attribute>
	</xsl:template>
	
	<xsl:template match="leg:level-vrnt/@subdoc">
		<!--  Original Target XPath:  @includeintoc   -->
		<xsl:attribute name="includeintoc">
			<xsl:value-of select="."/>
		</xsl:attribute>
	</xsl:template>
	
	<xsl:template match="leg:level-vrnt/@toc-caption">
		<!--  Original Target XPath:  alternatetoccaption   -->
		<xsl:attribute name="alternatetoccaption">
			<xsl:value-of select="."/>
		</xsl:attribute>
	</xsl:template>
	
	<xsl:template match="leg:level-vrnt">
		<!--  Original Target XPath:  primlaw:level   -->
		<xsl:apply-templates
			select="leg:heading/descendant::refpt | leg:levelinfo/leg:levelstatus/refpt"/>
		<xsl:apply-templates select="leg:heading"/>
		<xsl:apply-templates select="leg:heading/glp:note"/>
		<xsl:apply-templates select="leg:heading/leg:empleg"/>
		<xsl:apply-templates select="node() except (leg:heading | leg:empleg)"/>
	</xsl:template>
</xsl:stylesheet>