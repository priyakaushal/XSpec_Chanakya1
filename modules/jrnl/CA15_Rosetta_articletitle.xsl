<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
    xmlns:jrnl="http://www.lexis-nexis.com/glp/jrnl"
    xmlns:nitf="http://iptc.org/std/NITF/2006-10-18/"
    xmlns:lnf="urn:x-lexisnexis:conversion:global:functions:1"
    xmlns:proc="http://www.lexisnexis.com/xmlschemas/content/shared/process-elements/1/"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    version="2.0" exclude-result-prefixes="dita jrnl lnf xs">

    <dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="CA15_Rosetta_articletitle">
        <title>jrnl:articletitle <lnpid>id-CA15-35410</lnpid></title>
        <body>
            <p><sourcexml>jrnl:articletitle</sourcexml> becomes
                    <targetxml>nitf:body.head/nitf:hedline/nitf:hl1</targetxml>.</p>

            <!-- JHM: Mar 27 2015. Removed rule about child emph. Not in data. If turns up later have to ask what Canada wants -->
            <!--<p>Any <sourcexml>emph</sourcexml> children of <sourcexml>jrnl:articletitle</sourcexml>
            should be omitted.</p>-->

            <note> Replace single <sourcexml>nl</sourcexml> with a single space when it occurs in
                    <sourcexml>jrnl:articletitle</sourcexml>. When 2 consecutive
                    <sourcexml>nl</sourcexml> occur within <sourcexml>jrnl:articletitle</sourcexml>,
                replace the first <sourcexml>nl</sourcexml> with a space, and map the second
                    <sourcexml>nl</sourcexml> to <targetxml>proc:nl</targetxml>. </note>
            <example>
                <title>Source XML</title>
                <codeblock> &lt;jrnl:body&gt; &lt;jrnl:prelim&gt;
                    &lt;jrnl:articletitle&gt;Médiation,&lt;nl/&gt;justice et
                    droit:&lt;nl/&gt;&lt;nl/&gt;un mélange hétéroclite&lt;/jrnl:articletitle&gt;
                    &lt;/jrnl:prelim&gt; &lt;/jrnl:body&gt; </codeblock>
                <title>Target XML</title>
                <codeblock> &lt;nitf:body&gt; &lt;nitf:body.head&gt; &lt;nitf:hedline&gt;
                    &lt;nitf:hl1&gt;Médiation, justice et droit: &lt;proc:nl/&gt;un mélange
                    hétéroclite&lt;/nitf:hl1&gt; &lt;/nitf:hedline&gt; &lt;/nitf:body.head&gt;
                    &lt;/nitf:body&gt; &lt;!-- notice that a space precedes &lt;proc:nl/&gt; --&gt;
                </codeblock>
            </example>
            <section>
                <title>Changes</title>
                <p>2015-08-31: <ph id="change_20150831_jhm">Modified rule for two consecutive
                            <sourcexml>nl</sourcexml>. Maps to single <targetxml>proc:nl</targetxml>
                        as before but now requires space preceding <targetxml>proc:nl</targetxml>.
                        RFA 72.</ph></p>
                <p>2015-05-04: <ph id="change_20150504_AS"><sourcexml>jrnl:articletitle</sourcexml>
                        directions for <sourcexml>nl</sourcexml>. Db issue #43</ph></p>
                <p>2015-03-26: <ph id="change_20150326_jhm">Minor. Administrative. Removed rule
                        about child <sourcexml>emph</sourcexml>. Not in data.</ph></p>
                <p>2015-02-17: <ph id="change_20150217_AS">Created.</ph></p>
            </section>
        </body>
    </dita:topic>
    
    <!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
    <!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-CAN\CA15-Journal_Articles\CA15_Rosetta_articletitle.dita  -->
    <!--<xsl:message>CA15_Rosetta_articletitle.xsl requires manual development!</xsl:message> -->
    <xsl:template match="jrnl:articletitle">
        <xsl:param name="articletitleStringsToRemove" as="xs:string*" select="('TITLE/TITRE: ' , 'TITRE/TITLE: ','TITLE: ' , 'TITRE: ' )"/>
        
      <!--  <xsl:variable name="outputText" as="xs:string*">
            <xsl:apply-templates/>
        </xsl:variable>-->
        
        <nitf:hedline>
            <nitf:hl1>
                <xsl:variable name="OutputText" select="text()[1]"/>
                <xsl:sequence select=" lnf:removeSequenceOfStrings( string-join( $OutputText , '' ) , $articletitleStringsToRemove , false() ) "/>
                <xsl:apply-templates select="@*|node() except text()[1]"></xsl:apply-templates>
            </nitf:hl1>
        </nitf:hedline>
  
    </xsl:template>
    

    <xsl:template match="nl[parent::jrnl:articletitle][following-sibling::*[1]][self::nl]" priority="23">
        <proc:nl/>
    </xsl:template>

    <xsl:template match="jrnl:articletitle/nl"  priority="25"> 
        <xsl:text> </xsl:text>
    </xsl:template>

</xsl:stylesheet>
