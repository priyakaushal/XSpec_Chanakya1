<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:docinfo="http://www.lexis-nexis.com/glp/docinfo" xmlns:functx="http://www.functx.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:case="http://www.lexis-nexis.com/glp/case" xmlns:caseinfo="http://www.lexisnexis.com/xmlschemas/content/legal/case-information/1/" xmlns="http://www.lexisnexis.com/xmlschemas/content/shared/base/1/" xmlns:decision="http://www.lexisnexis.com/xmlschemas/content/legal/decision/1/" version="2.0" exclude-result-prefixes="dita case docinfo xs caseinfo decision functx">
	
	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="Rosetta_case.hearingdates-to-LexisAdvance_decision.argueddate">
  <title>case:hearingdates-to-decision:argueddate</title>
  <body>
    <p>
      <sourcexml>case:hearingdates</sourcexml> becomes
        <targetxml>decision:dates/decision:argueddate</targetxml>. <pre>
&lt;case:dates&gt;
  &lt;case:hearingdates&gt;1 NOVEMBER 1974&lt;/case:hearingdates&gt;
&lt;/case:dates&gt;

<b>Becomes</b>
&lt;decision:dates&gt;
  &lt;decision:argueddate&gt;1 NOVEMBER 1974&lt;/decision:argueddate&gt;
&lt;/decision:dates&gt;

</pre>
      <note>If input <sourcexml>date[@day, @month, @year]</sourcexml> element comes under
          <sourcexml>case:hearingdates</sourcexml> then it should be mapped with
          <targetxml>decision:dates/decision:argueddate</targetxml> and date text captured inside
          <targetxml>date-text</targetxml> markup. Refer below example: <pre>
&lt;case:dates&gt;
  &lt;case:hearingdates&gt;
  (Opinions
  &lt;date month="12" day="13" year="2001"&gt;December 13, 2001&lt;/date&gt;
  )&lt;/case:hearingdates&gt;
&lt;/case:dates&gt;

<b>Becomes</b>
&lt;decision:dates&gt; 
  &lt;decision:argueddate month="12" day="13" year="2001"&gt;
(Opinions
  &lt;date-text&gt;December 13, 2001&lt;/date-text&gt;
  )&lt;/decision:argueddate&gt;
&lt;/decision:dates&gt;

</pre>
      </note>
    </p>
    
    <section>
      <title>Changes</title>
      <p>2015-01-27: <ph id="change_20150127_SS">Updated instruction and example for handling the
          input xpath <sourcexml>case:hearingdates/date</sourcexml>.</ph></p>
    </section>
  </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-UK\UK03_CaseDigest\Rosetta_case.hearingdates-to-LexisAdvance_decision.argueddate.dita  -->
	 
	<xsl:function name="functx:month-name-en" as="xs:string?" xmlns:functx="http://www.functx.com">
		<xsl:param name="date" as="xs:anyAtomicType?"/>
		<xsl:sequence select="('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December')[month-from-date(xs:date($date))]"/>
	</xsl:function>
	<xsl:function name="functx:month-name-fr" as="xs:string?" xmlns:functx="http://www.functx.com">
		<xsl:param name="date" as="xs:anyAtomicType?"/>
		<xsl:sequence select="('janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre')[month-from-date(xs:date($date))]"/>
	</xsl:function>
	
	 
	 
	 
	<xsl:template match="case:hearingdates">
		<xsl:choose>
			<xsl:when test="count(child::date)&gt;1">
				<xsl:apply-templates select="*"/>
			</xsl:when>
			<xsl:otherwise>
				<decision:argueddate>
					<xsl:attribute name="month">
						<xsl:value-of select="child::date/@month"></xsl:value-of>
					</xsl:attribute>
					<xsl:attribute name="day">
						<xsl:value-of select="child::date/@day"></xsl:value-of>
					</xsl:attribute>
					<xsl:attribute name="year">
						<xsl:value-of select="child::date/@year"></xsl:value-of>
					</xsl:attribute>
					<xsl:choose>
						<xsl:when test="child::date">
							<xsl:apply-templates select="@*|node()"/>    
						</xsl:when>
						<xsl:otherwise>
							<date-text>
								<xsl:apply-templates select="@*|node()"/>
							</date-text>
						</xsl:otherwise>
					</xsl:choose>        
				</decision:argueddate>		
			</xsl:otherwise>
		</xsl:choose>
		
	</xsl:template>
	
	<xsl:template match="case:hearingdates[not(child::date/@year or child::date/@month or child::date/@day)]">
		<xsl:if test="/DIGESTDOC/docinfo/docinfo:doc-lang/@lang='en'">
			<xsl:for-each select="text()">
				<xsl:variable name="hearingdate-string" select="normalize-space(.)"/>
				<decision:argueddate>
					<xsl:analyze-string select="$hearingdate-string" regex="(((January|February|March|April|May|June|July|August|September|October|November|December)\s(\d\d),\s(\d\d\d\d))|((January|February|March|April|May|June|July|August|September|October|November|December)\s(\d),\s(\d\d\d\d)))">
						<xsl:matching-substring>
							<date-text>
								<xsl:value-of select="regex-group(1)"/><!--<xsl:value-of select="regex-group(2)"/><xsl:value-of select="regex-group(3)"/>-->
							</date-text>
						</xsl:matching-substring>
						<xsl:non-matching-substring>       
							<xsl:value-of select="."/>        
						</xsl:non-matching-substring>
					</xsl:analyze-string>
				</decision:argueddate>
			</xsl:for-each>
		</xsl:if>
		
		<xsl:if test="/DIGESTDOC/docinfo/docinfo:doc-lang/@lang='fr'">
			<xsl:for-each select="text()">
				<xsl:variable name="hearingdate-string" select="normalize-space(.)"/>
				<decision:argueddate>
					<xsl:analyze-string select="$hearingdate-string" regex="(((\d\d)\s(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)\s(\d\d\d\d))|((\d)\s(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)\s(\d\d\d\d)))">
						<xsl:matching-substring>
							<date-text>
								<xsl:value-of select="normalize-space(regex-group(1))"/><!--<xsl:value-of select="regex-group(2)"/><xsl:value-of select="regex-group(3)"/>-->
							</date-text>
						</xsl:matching-substring>
						<xsl:non-matching-substring>       
							<xsl:value-of select="."/>        
						</xsl:non-matching-substring>
					</xsl:analyze-string>
				</decision:argueddate>
			</xsl:for-each>
		</xsl:if>
	</xsl:template>

</xsl:stylesheet>