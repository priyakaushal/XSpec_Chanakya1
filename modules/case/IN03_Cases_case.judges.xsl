<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:case="http://www.lexis-nexis.com/glp/case" xmlns:caseinfo="http://www.lexisnexis.com/xmlschemas/content/legal/case-information/1/" xmlns:courtcase="http://www.lexisnexis.com/xmlschemas/content/legal/courtcase/1/" xmlns:person="http://www.lexisnexis.com/xmlschemas/content/shared/person/1/" version="2.0" exclude-result-prefixes="dita case">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="case.judges">
    <title>case:judges <lnpid>id-IN03-39008</lnpid></title>
    <body>
        <section>
            <ul>
                <li> There are two contexts for <sourcexml>/case:judges/case:judge</sourcexml> in
                    Standard Rosetta along with NL Xpath: <ol>
                        <li>
                            /CASEDOC/case:body/case:headnote/case:info/case:courtinfo/case:judges/case:judge,
                                <b>NL Xpath:</b>
                            /courtcase:courtcase/courtcase:head/caseinfo:caseinfo/courtcase:panel/courtcase:judges/person:judge </li>
                        <li>
                            /CASEDOC/case:body/case:content/case:judgments/case:judgment/case:courtinfo/case:judges,
                                <b>NL Xpath:</b>
                            /courtcase:courtcase/courtcase:body/courtcase:opinions/courtcase:opinion/courtcase:opinionby
                        </li>
                    </ol>
                    <note>Conversion should not create consecutive
                            <targetxml>caseinfo:caseinfo</targetxml> elements. When 2 or more
                        consecutive sibling source elements map to
                            <targetxml>caseinfo:caseinfo</targetxml>, data should be merged to a
                        single <targetxml>caseinfo:caseinfo</targetxml> element unless this would
                        hamper content ordering.</note>
                    <sourcexml>case:judge</sourcexml> becomes <targetxml>person:judge</targetxml>
                    <pre>

&lt;case:judges&gt;
    &lt;case:judge&gt;Lord Davey&lt;/case:judge&gt;
&lt;/case:judges&gt;


<b>Becomes</b>


&lt;courtcase:judges&gt;
    &lt;person:judge&gt;Lord Davey&lt;/person:judge&gt;
&lt;/courtcase:judges&gt;

</pre>
                    <note> Capture PCData for judges markup as is in New Lexis and always create
                            <targetxml>person:judge</targetxml> as an immediate child of
                            <targetxml>courtcase:judges</targetxml> or
                            <targetxml>courtcase:opinionby</targetxml>. For example: if there is a
                        Rosetta <sourcexml>case:judges</sourcexml> element and it just contains text
                        then conversion need to create <targetxml>person:judge</targetxml> as a
                        child of <targetxml>courtcase:judges</targetxml> or
                            <targetxml>courtcase:opinionby</targetxml>.</note>
                    <pre>


&lt;case:judges&gt;Andrew Scoble, JJ.&lt;/case:judges&gt;


<b>Becomes</b>


&lt;courtcase:opinionby&gt;
    &lt;person:judge&gt;Andrew Scoble, JJ.&lt;/person:judge&gt;
&lt;/courtcase:opinionby&gt;

OR

&lt;courtcase:panel&gt;
    &lt;courtcase:judges&gt;
        &lt;person:judge&gt;Andrew Scoble, JJ.&lt;/person:judge&gt;
    &lt;/courtcase:judges&gt;
&lt;courtcase:panel&gt;

</pre>
                    <note>Connecting punctuation and newlines preceding judges can be accomodated in
                        the judges markup. </note></li>
            </ul>
        </section>
        <section>
            <title>Changes</title>
            <p>2016-08-17: <ph id="change_20160817_HP">Created</ph>.</p>
        </section>
    </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-IN\IN03_Cases\case.judges.dita  -->
	<xsl:message>IN03_Cases_case.judges.xsl requires manual development!</xsl:message> 

	<xsl:template match="/case:judges/case:judge">

		<!--  Original Target XPath:  caseinfo:caseinfo   -->
		<caseinfo:caseinfo>
			<xsl:apply-templates select="@* | node()"/>
		</caseinfo:caseinfo>

	</xsl:template>

	<xsl:template match="case:judge">

		<!--  Original Target XPath:  person:judge   -->
		<person:judge>
			<xsl:apply-templates select="@* | node()"/>
		</person:judge>

	</xsl:template>

	<xsl:template match="case:judges">

		<!--  Original Target XPath:  person:judge   -->
		<person:judge>
			<xsl:apply-templates select="@* | node()"/>
		</person:judge>

	</xsl:template>

</xsl:stylesheet>