<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:case="http://www.lexis-nexis.com/glp/case" xmlns:courtcase="http://www.lexisnexis.com/xmlschemas/content/legal/courtcase/1/" version="2.0" exclude-result-prefixes="dita case">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="case.constituents">
   <title>case:constituents <lnpid>id-CA02DS-12812</lnpid></title>
   <body>
      <section>
          <p>In Rosetta samples element <sourcexml>case:constituents/case:constituent</sourcexml>
                occurs with attribute <sourcexml>case:constituent/@constituenttype</sourcexml> which
                contains as given below: <ul>
                    <li>case:constituent[@constituenttype="counsel"]</li>
                </ul></p>
          <ul>
         <li>
                    <sourcexml>case:constituent[@constituenttype=”counsel”]</sourcexml> becomes
                        <targetxml>/seclaw:digestinfo/caseinfo:caseinfo/courtcase:representation/courtcase:counsel
                    </targetxml>. <ul>
                        <li><sourcexml>case:constituent</sourcexml> becomes
                                <targetxml>courtcase:counsel</targetxml></li>
                    </ul>
                    <pre>

&lt;case:info&gt;
    &lt;case:constituents&gt;
        &lt;case:constituent  constituenttype="counsel"&gt;Robert G. DeBou, for the plaintiff Robert B. Kennedy Moira C. Wong, for the defendants.&lt;/case:constituent&gt;
    &lt;/case:constituents&gt;
&lt;/case:info&gt;

                    </pre>
                    <b>Becomes</b>
                    <pre>

&lt;seclaw:digestinfo&gt;
    &lt;caseinfo:caseinfo&gt;
            &lt;courtcase:representation&gt;
                &lt;courtcase:counsel&gt;Robert G. DeBou, for the plaintiff Robert B. Kennedy Moira C. Wong, for the defendants.&lt;/courtcase:counsel&gt;
            &lt;/courtcase:representation&gt;
    &lt;/caseinfo:caseinfo&gt;
&lt;/seclaw:digestinfo&gt;

</pre>
                </li>
          </ul>
      </section>
       <section>
           <title>Changes</title>
           <p>2013-11-25: <ph id="change_20131114_SSX"/>Corrected the Snippet.</p>
       </section>
   </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-CAN\CA02-Case_Summaries\CA02DS_DIGESTDOC_to_seclaw\case.constituents.dita  -->
	
    <!-- Vikas Rohilla : Template to match the case:constituents and the process the child nodes	-->
    <xsl:template match="case:constituents">
        <xsl:apply-templates select="@*|node()"/>
    </xsl:template>
    
    <!-- Vikas Rohilla : template to match the case:case:constituents [@constituenttype = 'counsel'] and creats the courtcase:representation/courtcase:counsel  -->
    <xsl:template match="case:constituent[@constituenttype = 'counsel']">
        <courtcase:representation>
            <courtcase:counsel>
                <xsl:apply-templates select="@* | node()"/>
            </courtcase:counsel>
        </courtcase:representation>
    </xsl:template>
    
    <!-- Vikas Rohilla : template to match the case:case:constituents [@constituenttype = 'consultant'] and creats the courtcase:testimony/courtcase:expertwitnesses/courtcase:expertwitness  -->
    <xsl:template match="case:constituent[@constituenttype = 'consultant']">
        <courtcase:testimony>
            <courtcase:expertwitnesses>
                <courtcase:expertwitness>
                    <xsl:apply-templates select="@* | node()"/>
                </courtcase:expertwitness>
            </courtcase:expertwitnesses>
        </courtcase:testimony>
    </xsl:template>
    
    <!--Vikas Rohilla : Template to match the p[parent::case:constituents] and process the childs nodes-->
    <xsl:template match="p[parent::case:constituents]">
        <xsl:apply-templates select="@* | node()"/>
    </xsl:template>
    
    <!--Vikas Rohilla : Template to match the text[parent::case:constituents] and process the childs nodes-->
    <xsl:template match="text[ancestor::case:constituents]">
        <xsl:apply-templates select="@* | node()"/>
    </xsl:template>
    
    <!--Vikas Rohilla : supressed case:constituent/@constituenttype -->
    <xsl:template match="case:constituent/@constituenttype"/>
    
   
	

</xsl:stylesheet>