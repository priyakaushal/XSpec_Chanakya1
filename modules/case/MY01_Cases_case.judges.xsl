<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:case="http://www.lexis-nexis.com/glp/case" xmlns:caseinfo="http://www.lexisnexis.com/xmlschemas/content/legal/case-information/1/" xmlns:courtcase="http://www.lexisnexis.com/xmlschemas/content/legal/courtcase/1/" xmlns:person="http://www.lexisnexis.com/xmlschemas/content/shared/person/1/" version="2.0" exclude-result-prefixes="dita case">

	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="case.judges">
    <title>case:judges <lnpid>id-MY01-16009</lnpid></title>
    <body>
        <section>
            <ul>
                <li class="- topic/li "> There are two contexts for
                        <sourcexml>/case:judges/case:judge</sourcexml> in Standard Rosetta along
                    with NL Xpath: <ol class="- topic/ol ">
                        <li class="- topic/li ">
                            /CASEDOC/case:body/case:headnote/case:info/case:courtinfo/case:judges/case:judge,
                                <b class="+ topic/ph hi-d/b ">NL Xpath:</b>
                            /courtcase:courtcase/courtcase:head/caseinfo:caseinfo/courtcase:panel/courtcase:judges/person:judge </li>
                        <li class="- topic/li ">
                            /CASEDOC/case:body/case:content/case:judgments/case:judgment/case:courtinfo/case:judges,
                                <b class="+ topic/ph hi-d/b ">NL Xpath:</b>
                            /courtcase:courtcase/courtcase:body/courtcase:opinions/courtcase:opinion/courtcase:opinionby
                        </li>
                    </ol>
                    <note>Conversion should not create consecutive
                            <targetxml>caseinfo:caseinfo</targetxml> elements. When 2 or more
                        consecutive sibling source elements map to
                            <targetxml>caseinfo:caseinfo</targetxml>, data should be merged to a
                        single <targetxml>caseinfo:caseinfo</targetxml> element unless this would
                        hamper content ordering.</note>
                    <sourcexml>case:judge</sourcexml> becomes <targetxml>person:judge</targetxml>
                    <pre xml:space="preserve" class="- topic/pre ">
&lt;case:judges&gt;
    &lt;case:judge&gt;Huggins J &lt;/case:judge&gt;
&lt;/case:judges&gt;

<b class="+ topic/ph hi-d/b ">Becomes</b>

&lt;courtcase:judges&gt;
    &lt;person:judge&gt;Huggins J &lt;/person:judge&gt;
&lt;/courtcase:judges&gt;

OR

&lt;courtcase:panel&gt;
    &lt;courtcase:judges&gt;
        &lt;person:judge&gt;Huggins J &lt;/person:judge&gt; J
    &lt;/courtcase:judges&gt;
&lt;courtcase:panel&gt;
</pre>
                    <note class="- topic/note "> Capture PCData for judges markup as is in New Lexis
                        and always create <targetxml>person:judge</targetxml> as an immediate child
                        of <targetxml>courtcase:judges</targetxml> or
                            <targetxml>courtcase:opinionby</targetxml>. For example: if there is a
                        Rosetta <sourcexml>case:judges</sourcexml> element and it just contains text
                        then conversion need to create <targetxml>person:judge</targetxml> as a
                        child of <targetxml>courtcase:judges</targetxml> or
                            <targetxml>courtcase:opinionby</targetxml>.</note>
                    <pre xml:space="preserve" class="- topic/pre ">

&lt;case:judges&gt;Roberts, C.J.&lt;/case:judges&gt;

<b class="+ topic/ph hi-d/b ">Becomes</b>

&lt;courtcase:opinionby&gt;
    &lt;person:judge&gt;Roberts, C.J.&lt;/person:judge&gt;
&lt;/courtcase:opinionby&gt;

OR

&lt;courtcase:panel&gt;
    &lt;courtcase:judges&gt;
        &lt;person:judge&gt;Roberts, C.J.&lt;/person:judge&gt;
    &lt;/courtcase:judges&gt;
&lt;courtcase:panel&gt;
</pre>
                    <note class="- topic/note ">Connecting punctuation and newlines preceding judges
                        can be accomodated in the judges markup. </note></li>
            </ul>
        </section>
    </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-MY\MY01_Cases\case.judges.dita  -->
<!--	<xsl:message>MY01_Cases_case.judges.xsl requires manual development!</xsl:message> -->

    <xsl:template match="case:judges[ancestor::case:headnote]">
        <courtcase:panel>
            <courtcase:judges>                
                <xsl:apply-templates select="@* | node()"/>                
            </courtcase:judges>
        </courtcase:panel>
    </xsl:template>
    
    <xsl:template match="case:judges/case:judge[ancestor::case:headnote]">
        <person:judge>
            <xsl:apply-templates select="@* | node()"/>
        </person:judge>
    </xsl:template>

    <xsl:template match="case:judges[ancestor::case:content]">
        <courtcase:opinionby>
            <person:judge>
                <xsl:choose>
                    <xsl:when test="child::case:judge">
                        <xsl:apply-templates select="@* | node()"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:apply-templates select="@* | node()"/>
                    </xsl:otherwise>
                </xsl:choose>
            </person:judge>
        </courtcase:opinionby>
    </xsl:template>
    
    <xsl:template match="case:judges/case:judge[ancestor::case:content]">
        <xsl:apply-templates select="@* | node()"/>
    </xsl:template>
    
    <xsl:template match="case:judges/nl"/>
    
    <xsl:template match="case:judges/emph[@typestyle = 'smcaps']">
        <xsl:apply-templates select="node()"/>
    </xsl:template>

</xsl:stylesheet>