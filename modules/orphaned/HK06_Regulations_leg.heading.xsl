<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dita="http://dita.oasis-open.org/architecture/2005/" xmlns:leg="http://www.lexis-nexis.com/glp/leg" xmlns:primlaw="http://www.lexisnexis.com/xmlschemas/content/legal/primarylaw/1/" version="2.0" exclude-result-prefixes="dita leg">

<!-- ********************* -->
<!-- Unclear on what happened here but leg:heading/@subdoc does not exist.  
		It may be that leg:level-vrnt instructions were partially copied to leg:heading module.
	In any case, use the leg.heading.xsl module instead of this one.-->
<!-- ********************* -->
	<dita:topic xmlns="http://dita.oasis-open.org/architecture/2005/" id="leg.heading">
  <title>leg:heading <lnpid>id-HK06-37411</lnpid></title>
  <body>
    <section>
        <p><sourcexml>leg:heading</sourcexml> becomes <targetxml>heading</targetxml> with attributes <sourcexml>@subdoc</sourcexml> becomes 
        	<targetxml>@includeintoc</targetxml>, <sourcexml>@toc-caption</sourcexml> becomes <targetxml>@alternatetoccaption</targetxml>, 
        	<sourcexml>@align</sourcexml> becomes <targetxml>@align</targetxml> and <sourcexml>@inline</sourcexml> becomes <targetxml>@inline</targetxml>.</p>
     
      <note>The attributes <targetxml>@includeintoc</targetxml> and <targetxml>@alternatetoccaption</targetxml> will be part of element 
      	<targetxml>primlaw:level</targetxml>.</note>      
    </section>
    <example>
            <title>Mapping of <sourcexml>leg:heading</sourcexml></title>
            <codeblock>

&lt;leg:level id="AOHK.057.SUBLEG_001.SCH5"&gt;
    &lt;leg:level-vrnt leveltype="schedule" searchtype="LEGISLATION SCHEDULE" subdoc="false" toc-caption="SCHEDULE 5FEES"&gt;
        &lt;leg:heading&gt;
            &lt;desig searchtype="SCH-NUM"&gt;
                &lt;designum&gt;
                    &lt;refpt id="AOHK.057.SUBLEG_001.SCH5" type="ext"/&gt;SCHEDULE 5
                &lt;/designum&gt;
            &lt;/desig&gt;
            &lt;title searchtype="SCH-TITLE"&gt; FEES&lt;/title&gt;
        &lt;/leg:heading&gt;
    &lt;/leg:level-vrnt&gt;
    ...
&lt;/leg:level&gt;

      </codeblock>
            <b>becomes</b>
            <codeblock>

&lt;primlaw:level alternatetoccaption="SCHEDULE 5FEES" includeintoc="false" leveltype="schedule"&gt;
    &lt;ref:anchor id="AOHK.057.SUBLEG_001.SCH5" anchortype="global"/&gt;
    &lt;heading&gt;
        &lt;desig&gt;SCHEDULE 5&lt;/desig&gt;
        &lt;title&gt; FEES&lt;/title&gt;
     &lt;/heading&gt;
     ...
&lt;/primlaw:level&gt;
    
      </codeblock>
        </example> 
      <note>If the input documents are having scenarios <sourcexml>leg:bodytext/leg:heading/desig</sourcexml> and <sourcexml>leg:bodytext/leg:heading/title</sourcexml> then <sourcexml>leg:bodytext</sourcexml> becomes
          <targetxml>primlaw:bodytext</targetxml> and create a wrapper <targetxml>primlaw:level[@leveltype="unclassified"]</targetxml> with child <sourcexml>desig</sourcexml> becomes <targetxml>desig</targetxml> and <sourcexml>title</sourcexml> becomes <targetxml>title</targetxml>.</note>
      <example>
            <title>Mapping of <sourcexml>leg:heading</sourcexml></title>
            <codeblock>

&lt;leg:levelbody&gt;
    &lt;leg:bodytext&gt;
        &lt;leg:heading align="center"&gt;
            &lt;title&gt;&lt;refpt type="ext" id="LOHK.0051.SUBLEG_51G.REG6"/&gt;Examination cutting samples&lt;/title&gt;
        &lt;/leg:heading&gt;
        ...
     &lt;/leg:bodytext&gt;
&lt;/leg:levelbody&gt;

      </codeblock>
            <b>becomes</b>
            <codeblock>

&lt;primlaw:bodytext&gt;
    &lt;primlaw:level leveltype="unclassfied"&gt;
        &lt;ref:anchor id="LOHK.0051.SUBLEG_51G.REG6" anchortype="global"/&gt;
        &lt;heading align="center"&gt;
            &lt;title&gt;Examination cutting samples&lt;/title&gt;
        &lt;/heading&gt;
        ...
    &lt;/primlaw:level&gt;
&lt;/primlaw:bodytext&gt;
    
      </codeblock>
        </example>
 <section>
      <title>Changes</title>
      <p>2016-04-19: Created.</p>
    </section> 
  </body>
	</dita:topic>

	<!--  @@@ This file has been autogenerated.  Remove this comment after manual development complete! @@@  -->
	<!--    Original DITA file location:  DITA\ConversionInstructions\Rosetta\DITA-HK\HK06_Regulations\leg.heading.dita  -->
	<xsl:message>HK06_Regulations_leg.heading.xsl requires manual development!</xsl:message> 

	<xsl:template match="leg:heading">

		<!--  Original Target XPath:  heading   -->
		<heading>
			<xsl:apply-templates select="@* | node()"/>
		</heading>

	</xsl:template>

	<xsl:template match="@subdoc">

		<!--  Original Target XPath:  @includeintoc   -->
		<xsl:attribute name="includeintoc">
			<xsl:apply-templates select="node()"/>
		</xsl:attribute>

	</xsl:template>

	<xsl:template match="@toc-caption">

		<!--  Original Target XPath:  @alternatetoccaption   -->
		<xsl:attribute name="alternatetoccaption">
			<xsl:apply-templates select="node()"/>
		</xsl:attribute>

	</xsl:template>

	<xsl:template match="@align">

		<!--  Original Target XPath:  @align   -->
		<xsl:attribute name="align">
			<xsl:apply-templates select="node()"/>
		</xsl:attribute>

	</xsl:template>

	<xsl:template match="@inline">

		<!--  Original Target XPath:  @inline   -->
		<xsl:attribute name="inline">
			<xsl:apply-templates select="node()"/>
		</xsl:attribute>

	</xsl:template>

	<xsl:template match="leg:bodytext/leg:heading/desig">

		<!--  Original Target XPath:  primlaw:bodytext   -->
		<primlaw:bodytext>
			<xsl:apply-templates select="@* | node()"/>
		</primlaw:bodytext>

	</xsl:template>

	<xsl:template match="leg:bodytext/leg:heading/title">

		<!--  Original Target XPath:  primlaw:bodytext   -->
		<primlaw:bodytext>
			<xsl:apply-templates select="@* | node()"/>
		</primlaw:bodytext>

	</xsl:template>

	<xsl:template match="leg:bodytext">

		<!--  Original Target XPath:  primlaw:bodytext   -->
		<primlaw:bodytext>
			<xsl:apply-templates select="@* | node()"/>
		</primlaw:bodytext>

	</xsl:template>

	<xsl:template match="desig">

		<!--  Original Target XPath:  desig   -->
		<desig>
			<xsl:apply-templates select="@* | node()"/>
		</desig>

	</xsl:template>

	<xsl:template match="title">

		<!--  Original Target XPath:  title   -->
		<title>
			<xsl:apply-templates select="@* | node()"/>
		</title>

	</xsl:template>

</xsl:stylesheet>